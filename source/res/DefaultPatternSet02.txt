C++:1:0{
	comment:"/\*":"\*/"::Comment::
	cplus comment:"//":"(?<!\\)$"::Comment::
	string:"L?""":"""":"\n":String::
	preprocessor line:"^\s*#\s*(?:include|define|if|ifn?def|line|error|else|endif|elif|undef|pragma)>":"$"::Preprocessor::
	string escape chars:"\\(?:.|\n)":::String1:string:
	preprocessor esc chars:"\\(?:.|\n)":::Preprocessor1:preprocessor line:
	preprocessor comment:"/\*":"\*/"::Comment:preprocessor line:
	preproc cplus comment:"//":"$"::Comment:preprocessor line:
    	preprocessor string:"L?""":"""":"\n":Preprocessor1:preprocessor line:
    	prepr string esc chars:"\\(?:.|\n)":::String1:preprocessor string:
	preprocessor keywords:"<__(?:LINE|FILE|DATE|TIME|STDC)__>":::Preprocessor::
	character constant:"L?'":"'":"[^\\][^']":Character Const::
	numeric constant:"(?<!\Y)(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\.?[0-9]*)|(?:\.[0-9]+))(?:(?:e|E)(?:\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?(?!\Y)":::Numeric Const::D
	storage keyword:"<(?:class|typename|typeid|template|friend|virtual|inline|explicit|operator|public|private|protected|const|extern|auto|register|static|mutable|unsigned|signed|volatile|char|double|float|int|long|short|bool|wchar_t|void|typedef|struct|union|enum|asm|export)>":::Storage Type::D
	keyword:"<(?:new|delete|this|return|goto|if|else|case|default|switch|break|continue|while|do|for|try|catch|throw|sizeof|true|false|namespace|using|dynamic_cast|static_cast|reinterpret_cast|const_cast)>":::Keyword::D
	braces:"[{}]":::Keyword::D}
