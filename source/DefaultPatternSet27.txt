Yacc:1:0{
	comment:"/\*":"\*/"::Comment::
	string:"L?""":"""":"\n":String::
	preprocessor line:"^\s*#\s*(include|define|if|ifn?def|line|error|else|endif|elif|undef|pragma)>":"$"::Preprocessor::
	string escape chars:"\\(.|\n)":::String1:string:
	preprocessor esc chars:"\\(.|\n)":::Preprocessor1:preprocessor line:
	preprocessor comment:"/\*":"\*/"::Comment:preprocessor line:
    	preprocessor string:"L?""":"""":"\n":Preprocessor1:preprocessor line:
    	prepr string esc chars:"\\(?:.|\n)":::String1:preprocessor string:
	character constant:"'":"'":"[^\\][^']":Character Const::
	numeric constant:"(?<!\Y)((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?(?!\Y)":::Numeric Const::D
	storage keyword:"<(const|extern|auto|register|static|unsigned|signed|volatile|char|double|float|int|long|short|void|typedef|struct|union|enum)>":::Storage Type::D
	rule:"^[ \t]*[A-Za-z_][A-Za-z0-9_]*[ \t]*:":::Preprocessor1::D
	keyword:"<(return|goto|if|else|case|default|switch|break|continue|while|do|for|sizeof)>":::Keyword::D
	yacc keyword:"<(error|YYABORT|YYACCEPT|YYBACKUP|YYERROR|YYINITDEPTH|YYLTYPE|YYMAXDEPTH|YYRECOVERING|YYSTYPE|yychar|yyclearin|yydebug|yyerrok|yyerror|yylex|yylval|yylloc|yynerrs|yyparse)>":::Text Arg::D
	percent keyword:"(?<!\Y)(%left|%nonassoc|%prec|%right|%start|%token|%type|%union)>([ \t]*\<.*\>)?":::Text Arg::D
	braces:"[{}]":::Keyword::D
	markers:"(?<!\Y)(%\{|%\}|%%)(?!\Y)":::Flag::D
	percent sub-expr:"\2":::Text Arg2:percent keyword:DC}
