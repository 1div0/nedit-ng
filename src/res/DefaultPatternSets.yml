Ada:
  line_context: 1
  char_context: 0
  patterns:
    - name: Comments
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: --
      end_re: $
    - name: String Literals
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: Character Literals
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'(?:[^\\\\]|\\\\.)'"
    - name: Ada Attributes
      style: Ada Attributes
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?i'size\s+(use)>)|'\l[\l\d]*(?:_[\l\d]+)*
    - name: Size Attribute
      style: Keyword
      parent_pattern: Ada Attributes
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Based Numeric Literals
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:\d+(?:_\d+)*)#(?:[\da-fA-F]+(?:_[\da-fA-F]+)*)(?:\.[\da-fA-F]+(?:_[\da-fA-F]+)*)?#(?iE[+\-]?(?:\d+(?:_\d+)*))?(?!\Y)
    - name: Numeric Literals
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:\d+(?:_\d+)*)(?:\.\d+(?:_\d+)*)?(?iE[+\-]?(?:\d+(?:_\d+)*))?>
    - name: Pragma
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?n(?ipragma)\s+\l[\l\d]*(?:_\l[\l\d]*)*\s*\([^)]*\)\s*;)
    - name: Withs Use
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Make \s work across newlines)(?n(?iwith|use)(?#Leading W/S)\s+(?#First package name)(?:\l[\l\d]*(?:(_|\.\l)[\l\d]*)*)(?#Additional package names [optional])(?:\s*,\s*(?:\l[\l\d]*(?:(_|\.\l)[\l\d]+)*))*(?#Trailing W/S)\s*;)+
    - name: Predefined Types
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?i(?=[bcdfilps]))<(?iboolean|character|count|duration|float|integer|long_float|long_integer|priority|short_float|short_integer|string)>
    - name: Predefined Subtypes
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?i(?=[fnp]))<(?ifield|natural|number_base|positive|priority)>
    - name: Reserved Words
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?i(?=[a-gil-pr-uwx]))<(?iabort|abs|accept|access|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|is|limited|loop|mod|new|not|null|of|or|others|out|package|pragma|private|procedure|raise|range|record|rem|renames|return|reverse|select|separate|subtype|task|terminate|then|type|use|when|while|with|xor)>
    - name: Dot All
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \.(?iall)>
    - name: Ada 95 Only
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?i(?=[aprtu]))<(?iabstract|tagged|all|protected|aliased|requeue|until)>
    - name: Labels Parent
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(\l[\l\d]*(?:_[\l\d]+)*)(?n\s*:\s*)(?ifor|while|loop|declare|begin)>
    - name: Labels subpattern
      style: Label
      parent_pattern: Labels Parent
      defer_parsing: true
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Endloop labels
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?nend\s+loop\s+(\l[\l\d]*(?:_[\l\d]+)*\s*));
    - name: Endloop labels subpattern
      style: Label
      parent_pattern: Endloop labels
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Goto labels
      style: Flag
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<\<\l[\l\d]*(?:_[\l\d]+)*\>\>
    - name: Exit parent
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?iexit))\s+(\l\w*)(?i\s+when>)?
    - name: Exit subpattern
      style: Label
      parent_pattern: Exit parent
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: Identifiers
      style: Identifier
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:\l[\l\d]*(?:_[\l\d]+)*)>
Awk:
  line_context: 2
  char_context: 0
  patterns:
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Pattern
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /(\\.|([[][]]?[^]]+[]])|[^/])+/
    - name: Keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(return|print|printf|if|else|while|for|in|do|break|continue|next|exit|close|system|getline)>
    - name: String
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: String escape
      style: String1
      parent_pattern: String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: Builtin functions
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(atan2|cos|exp|int|log|rand|sin|sqrt|srand|gsub|index|length|match|split|sprintf|sub|substr)>
    - name: Gawk builtin functions
      style: Text Key1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(fflush|gensub|tolower|toupper|systime|strftime)>
    - name: Builtin variables
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(ARGC|ARGV|FILENAME|FNR|FS|NF|NR|OFMT|OFS|ORS|RLENGTH|RS|RSTART|SUBSEP)>
    - name: Gawk builtin variables
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\"<(ARGIND|ERRNO|RT|IGNORECASE|FIELDWIDTHS)>\""
    - name: Field
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$[0-9a-zA-Z_]+|\$[ \t]*\([^,;]*\)
    - name: BeginEnd
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(BEGIN|END)>
    - name: Numeric constant
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((0(x|X)[0-9a-fA-F]*)|[0-9.]+((e|E)(\+|-)?)?[0-9]*)(L|l|UL|ul|u|U|F|f)?(?!\Y)
    - name: String pattern
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ~[ \t]*"
      end_re: "\""
      error_re: \n
    - name: String pattern escape
      style: Preprocessor
      parent_pattern: String pattern
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: newline escape
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\$
    - name: Function
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: function
C++:
  line_context: 1
  char_context: 0
  patterns:
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: cplus comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: //
      end_re: (?<!\\)$
    - name: string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: preprocessor line
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^\s*#\s*(?:include|define|if|ifn?def|line|error|else|endif|elif|undef|pragma)>
      end_re: $
    - name: string escape chars
      style: String1
      parent_pattern: string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: preprocessor esc chars
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: preprocessor comment
      style: Comment
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: preproc cplus comment
      style: Comment
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: //
      end_re: $
    - name: preprocessor string
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: prepr string esc chars
      style: String1
      parent_pattern: preprocessor string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: preprocessor keywords
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <__(?:LINE|FILE|DATE|TIME|STDC)__>
    - name: character constant
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?'
      end_re: "'"
      error_re: "[^\\\\][^']"
    - name: numeric constant
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\.?[0-9]*)|(?:\.[0-9]+))(?:(?:e|E)(?:\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?(?!\Y)
    - name: storage keyword
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:class|typename|typeid|template|friend|virtual|inline|explicit|operator|public|private|protected|const|extern|auto|register|static|mutable|unsigned|signed|volatile|char|double|float|int|long|short|bool|wchar_t|void|typedef|struct|union|enum|asm|export)>
    - name: keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:new|delete|this|return|goto|if|else|case|default|switch|break|continue|while|do|for|try|catch|throw|sizeof|true|false|namespace|using|dynamic_cast|static_cast|reinterpret_cast|const_cast)>
    - name: braces
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}]"
C:
  line_context: 1
  char_context: 0
  patterns:
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: preprocessor line
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^\s*#\s*(?:include|define|if|ifn?def|line|error|else|endif|elif|undef|pragma)>
      end_re: $
    - name: string escape chars
      style: String1
      parent_pattern: string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: preprocessor esc chars
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: preprocessor comment
      style: Comment
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: preprocessor string
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: prepr string esc chars
      style: String1
      parent_pattern: preprocessor string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: preprocessor keywords
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <__(?:LINE|FILE|DATE|TIME|STDC)__>
    - name: character constant
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?'
      end_re: "'"
      error_re: "[^\\\\][^']"
    - name: numeric constant
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\.?[0-9]*)|(?:\.[0-9]+))(?:(?:e|E)(?:\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?(?!\Y)
    - name: storage keyword
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:const|extern|auto|register|static|unsigned|signed|volatile|char|double|float|int|long|short|void|typedef|struct|union|enum)>
    - name: keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:return|goto|if|else|case|default|switch|break|continue|while|do|for|sizeof)>
    - name: braces
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}]"
CSS:
  line_context: 1
  char_context: 0
  patterns:
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: import rule
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "@import\\s+(url\\([^)]+\\))\\s*"
      end_re: ;
    - name: import delim
      style: Preprocessor
      parent_pattern: import rule
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: import url
      style: Subroutine1
      parent_pattern: import rule
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: import media
      style: Preprocessor1
      parent_pattern: import rule
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (all|screen|print|projection|aural|braille|embossed|handheld|tty|tv|,)
    - name: media rule
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (@media)\s+
      end_re: (?=\{)
    - name: media delim
      style: Preprocessor
      parent_pattern: media rule
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: media type
      style: Preprocessor1
      parent_pattern: media rule
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (all|screen|print|projection|aural|braille|embossed|handheld|tty|tv|,)
    - name: charset rule
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "@charset\\s+(\"[^\"]+\")\\s*;"
    - name: charset name
      style: String
      parent_pattern: charset rule
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: font-face rule
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "@font-face"
    - name: page rule
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "@page"
      end_re: (?=\{)
    - name: page delim
      style: Preprocessor
      parent_pattern: page rule
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: page pseudo class
      style: Storage Type
      parent_pattern: page rule
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: :(first|left|right)
    - name: declaration
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{
      end_re: \}
    - name: declaration delims
      style: Keyword
      parent_pattern: declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: declaration comment
      style: Comment
      parent_pattern: declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: property
      style: Identifier1
      parent_pattern: declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(azimuth|background(-(attachment|color|image|position|repeat))?|border(-(bottom(-(color|style|width))?|-(color|style|width)|collapse|color|left(-(color|style|width))?|right(-(color|style|width))?|spacing|style|top(-(color|style|width))?|width))?|bottom|caption-side|clear|clip|color|content|counter-(increment|reset)|cue(-(after|before))?|cursor|direction|display|elevation|empty-cells|float|font(-(family|size|size-adjust|stretch|style|variant|weight))?|height|left|letter-spacing|line-height|list-style(-(image|position|type))?|margin(-(bottom|left|right|top))?|marker-offset|marks|max-(height|width)|min-(height|width)|orphans|outline(-(color|style|width))?|overflow|padding(-(bottom|left|right|top))?|page(-break-(after|before|inside))?|pause(-(after|before))?|pitch(-range)?|play-during|position|quotes|richness|right|size|speak(-(header|numeral|punctuation))?|speech-rate|stress|table-layout|text(-(align|decoration|indent|shadow|transform))|top|unicode-bidi|vertical-align|visibility|voice-family|volume|white-space|widows|width|word-spacing|z-index)>
    - name: value
      style: Warning
      parent_pattern: declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ":"
      end_re: ;
      error_re: \}
    - name: value delims
      style: Keyword
      parent_pattern: value
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: value modifier
      style: Keyword
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "!important|inherit"
    - name: uri value
      style: Subroutine1
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <url\([^)]+\)
    - name: clip value
      style: Subroutine
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <rect\(\s*([+-]?\d+(?:\.\d*)?)(in|cm|mm|pt|pc|em|ex|px)\s*(,|\s)\s*([+-]?\d+(?:\.\d*)?)(in|cm|mm|pt|pc|em|ex|px)\s*(,|\s)\s*([+-]?\d+(?:\.\d*)?)(in|cm|mm|pt|pc|em|ex|px)\s*(,|\s)\s*([+-]?\d+(?:\.\d*)?)(in|cm|mm|pt|pc|em|ex|px)\s*\)
    - name: function value
      style: Subroutine
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <attr\([^)]+\)|<counter\((\l|\\([ -~\0200-\0377]|[\l\d]{1,6}\s?))([-\l\d]|\\([ -~\0200-\0377]|[\l\d]{1,6}\s?))*\s*(,\s*<(disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman|lower-greek|lower-alpha|lower-latin|upper-alpha|upper-latin|hebrew|armenian|georgian|cjk-ideographic|hiragana|katakana|hiragana-iroha|katakana-iroha|none)>)?\)|<counters\((\l|\\([ -~\0200-\0377]|[\l\d]{1,6}\s?))([-\l\d]|\\([ -~\0200-\0377]|[\l\d]{1,6}\s?))*\s*,\s*("[^"]*"|'[^']*')\s*(,\s*<(disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman|lower-greek|lower-alpha|lower-latin|upper-alpha|upper-latin|hebrew|armenian|georgian|cjk-ideographic|hiragana|katakana|hiragana-iroha|katakana-iroha|none)>)?\)
    - name: color value
      style: Text Arg2
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (#[A-Fa-f\d]{6}>|#[A-Fa-f\d]{3}>|rgb\(([+-]?\d+(\.\d*)?)\s*,\s*([+-]?\d+(\.\d*)?)\s*,\s*([+-]?\d+(\.\d*)?)\)|rgb\(([+-]?\d+(\.\d*)?%)\s*,\s*([+-]?\d+(\.\d*)?%)\s*,\s*([+-]?\d+(\.\d*)?%)\)|<(?iaqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow)>|<transparent>)
    - name: dimension value
      style: Numeric Const
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[+-]?(\\d*\\.\\d+|\\d+)(in|cm|mm|pt|pc|em|ex|px|deg|grad|rad|s|ms|hz|khz)>"
    - name: percentage value
      style: Numeric Const
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[+-]?(\\d*\\.\\d+|\\d+)%"
    - name: named value
      style: Text Arg2
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(100|200|300|400|500|600|700|800|900|above|absolute|always|armenian|auto|avoid|baseline|behind|below|bidi-override|blink|block|bold|bolder|both|bottom|capitalize|caption|center(?:-left|-right)?|child|circle|cjk-ideographic|close-quote|code|collapse|compact|condensed|continuous|crop|cross(?:hair)?|cursive|dashed|decimal(?:-leading-zero)?|default|digits|disc|dotted|double|e-resize|embed|expanded|extra(?:-condensed|-expanded)|fantasy|far(?:-left|-right)|fast(?:er)?|female|fixed|georgian|groove|hebrew|help|hidden|hide|high(?:er)?|hiragana(?:-iroha)?|icon|inherit|inline(?:-table)?|inset|inside|italic|justify|katakana(?:-iroha)?|landscape|larger?|left(?:-side|wards)?|level|lighter|line-through|list-item|loud|low(?:er(?:-alpha|-greek|-latin|-roman|case)?)?|ltr|male|marker|medium|menu|message-box|middle|mix|monospace|move|n-resize|narrower|ne-resize|no(?:-close-quote|-open-quote|-repeat)|none|normal|nowrap|nw-resize|oblique|once|open-quote|out(?:set|side)|overline|pointer|portrait|pre|relative|repeat(?:-x|-y)?|ridge|right(?:-side|wards)?|rtl|run-in|s-resize|sans-serif|scroll|se-resize|semi(?:-condensed|-expanded)|separate|serif|show|silent|slow(?:er)?|small(?:-caps|-caption|er)?|soft|solid|spell-out|square|static|status-bar|sub|super|sw-resize|table(?:-caption|-cell|-column(?:-group)?|-footer-group|-header-group|-row(?:-group)?)?|text(?:-bottom|-top)?|thick|thin|top|ultra(?:-condensed|-expanded)|underline|upper(?:-alpha|-latin|-roman|case)|visible|w-resize|wait|wider|x-(?:fast|high|large|loud|low|slow|small|soft)|xx-(large|small))>
    - name: integer value
      style: Numeric Const
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <\d+>
    - name: font family
      style: String
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?iarial|courier|impact|helvetica|lucida|symbol|times|verdana)
    - name: dq string value
      style: String
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: dq string escape
      style: Text Escape
      parent_pattern: dq string value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([ -~\0200-\0377]|[\l\d]{1,6}\s?)
    - name: dq string continuation
      style: Text Escape
      parent_pattern: dq string value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: sq string value
      style: String
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n
    - name: sq string escape
      style: Text Escape
      parent_pattern: sq string value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([ -~\0200-\0377]|[\l\d]{1,6}\s?)
    - name: sq string continuation
      style: Text Escape
      parent_pattern: sq string value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: operators
      style: Keyword
      parent_pattern: value
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[,/]"
    - name: selector id
      style: Pointer
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#[-\\w]+>"
    - name: selector class
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \.[-\w]+>
    - name: selector pseudo class
      style: Text Arg1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: :(first-child|link|visited|hover|active|focus|lang(\([\-\w]+\))?)(?!\Y)
    - name: selector attribute
      style: Ada Attributes
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \[[^\]]+\]
    - name: selector operators
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[,>*+]"
    - name: selector pseudo element
      style: Text Arg
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: :(first-letter|first-line|before|after)>
    - name: type selector
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <[\l_][-\w]*>
    - name: free text
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: info
      style: Plain
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "(?# version 1.31; author/maintainer: Joor Loohuis, joor@loohuis-consulting.nl)"
Csh:
  line_context: 1
  char_context: 0
  patterns:
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Single Quote String
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: ([^\\]'|^')
      error_re: \n
    - name: SQ String Esc Char
      style: String1
      parent_pattern: Single Quote String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([bcfnrt$\n\\]|[0-9][0-9]?[0-9]?)
    - name: Double Quote String
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: DQ String Esc Char
      style: String1
      parent_pattern: Double Quote String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([bcfnrt\n\\]|[0-9][0-9]?[0-9]?)
    - name: Keywords
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "(^|[`;()])[ \t]*(return|if|endif|then|else|switch|endsw|while|end|foreach|do|done)>"
    - name: Variable Ref
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([<$0-9\*]|[#a-zA-Z_?][0-9a-zA-Z_[\]]*(:([ehqrtx]|gh|gt|gr))?|\{[#0-9a-zA-Z_?][a-zA-Z0-9_[\]]*(:([ehqrtx]|gh|gt|gr))?})
    - name: Variable in String
      style: Identifier1
      parent_pattern: Double Quote String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([<$0-9\*]|[#a-zA-Z_?][0-9a-zA-Z_[\]]*(:([ehqrtx]|gh|gt|gr))?|\{[#0-9a-zA-Z_?][a-zA-Z0-9_[\]]*(:([ehqrtx]|gh|gt|gr))?})
    - name: Naked Variable Cmds
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(unset|set|setenv|shift)[ \t]+[0-9a-zA-Z_]*(\[.+\])?
    - name: Recolor Naked Cmd
      style: Keyword
      parent_pattern: Naked Variable Cmds
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: Built In Cmds
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "(^|\\|&|[\\|`;()])[ \t]*(alias|bg|break|breaksw|case|cd|chdir|continue|default|echo|eval|exec|exit|fg|goto|glob|hashstat|history|jobs|kill|limit|login|logout|nohup|notify|nice|onintr|popd|pushd|printenv|read|rehash|repeat|set|setenv|shift|source|suspend|time|umask|unalias|unhash|unlimit|unset|unsetenv|wait)>"
    - name: Tcsh Built In Cmds
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "(^|\\|&|[\\|`;()])[ \t]*(alloc|bindkey|builtins|complete|echotc|filetest|hup|log|sched|settc|setty|stop|telltc|uncomplete|where|which|dirs|ls-F)>"
    - name: Special Chars
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ([-{};.,<>&~=!|^%[\]\+\*\|()])
Fortran:
  line_context: 2
  char_context: 0
  patterns:
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^[Cc*!]
      end_re: $
    - name: Bang Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "!"
      end_re: $
    - name: Debug Line
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^D
      end_re: $
    - name: String
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n([^ \t]| [^ \t]|  [^ \t]|   [^ \t]|    [^ \t]|     [ \t0]| *\t[^1-9])
    - name: Keywords
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iaccept|automatic|backspace|block|call|close|common|continue|data|decode|delete|dimension|do|else|elseif|encode|enddo|end *file|endif|end|entry|equivalence|exit|external|format|function|go *to|if|implicit|include|inquire|intrinsic|logical|map|none|on|open|parameter|pause|pointer|print|program|read|record|return|rewind|save|static|stop|structure|subroutine|system|then|type|union|unlock|virtual|volatile|while|write)>
    - name: Data Types
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?ibyte|character|complex|double *complex|double *precision|double|integer|real)(\*[0-9]+)?>
    - name: F90 Keywords
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iallocatable|allocate|case|case|cycle|deallocate|elsewhere|namelist|recursive|rewrite|select|where|intent|optional)>
    - name: Continuation
      style: Flag
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^(     [^ \t0]|( |  |   |    )?\t[1-9])
    - name: Continuation in String
      style: Flag
      parent_pattern: String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \n(     [^ \t0]|( |  |   |    )?\t[1-9])
Java:
  line_context: 3
  char_context: 0
  patterns:
    - name: README
      style: Flag
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "Java highlighting patterns for NEdit 5.1. Version 1.5 Author/maintainer: Joachim Lous - jlous at users.sourceforge.net"
    - name: doccomment
      style: Text Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*\*
      end_re: \*/
    - name: doccomment tag
      style: Text Key1
      parent_pattern: doccomment
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "@\\l*"
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: cplus comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: //
      end_re: $
    - name: string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: string escape
      style: String1
      parent_pattern: string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?:\\u[\dA-Faf]{4}|\\[0-7]{1,3}|\\[btnfr'"\\])
    - name: single quoted
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n
    - name: single quoted escape
      style: String1
      parent_pattern: single quoted
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?:\\u[\dA-Faf]{4}|\\[0-7]{1,3}|\\[btnfr'"\\])(?=')
    - name: single quoted char
      style: String
      parent_pattern: single quoted
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .(?=')
    - name: single quoted error
      style: Flag
      parent_pattern: single quoted
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: hex const
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?i0[X][\dA-F]+)>
    - name: long const
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?i[\d]+L)>
    - name: decimal const
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(?i\d+(?:\.\d*)?(?:E[+\-]?\d+)?[FD]?|\.\d+(?:E[+\-]?\d+)?[FD]?)(?!\Y)
    - name: include
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:import|package)>
      end_re: ;
      error_re: \n
    - name: classdef
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:class|interface)>\s*\n?\s*([\l_]\w*)
    - name: classdef name
      style: Storage Type
      parent_pattern: classdef
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: extends
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:extends)>
      end_re: (?=(?:<implements>|[{;]))
    - name: extends argument
      style: Storage Type
      parent_pattern: extends
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <[\l_][\w\.]*(?=\s*(?:/\*.*\*/)?(?://.*)?\n?\s*(?:[,;{]|<implements>))
    - name: extends comma
      style: Keyword
      parent_pattern: extends
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ","
    - name: extends comment
      style: Comment
      parent_pattern: extends
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: extends cpluscomment
      style: Comment
      parent_pattern: extends
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: //
      end_re: $
    - name: extends error
      style: Flag
      parent_pattern: extends
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: impl_throw
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:implements|throws)>
      end_re: (?=[{;])
    - name: impl_throw argument
      style: Storage Type
      parent_pattern: impl_throw
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <[\l_][\w\.]*(?=\s*(?:/\*.*\*/)?(?://.*)?\n?\s*[,;{])
    - name: impl_throw comma
      style: Keyword
      parent_pattern: impl_throw
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ","
    - name: impl_throw comment
      style: Comment
      parent_pattern: impl_throw
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: impl_throw cpluscomment
      style: Comment
      parent_pattern: impl_throw
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: //
      end_re: $
    - name: impl_throw error
      style: Flag
      parent_pattern: impl_throw
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: case
      style: Label
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <case>
      end_re: ":"
    - name: case single quoted
      style: Character Const
      parent_pattern: case
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'\\\\?[^']'"
    - name: case numeric const
      style: Numeric Const
      parent_pattern: case
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(?i0[X][\dA-F]+|\d+(:?\.\d*)?(?:E[+\-]?\d+)?F?|\.\d+(?:E[+\-]?\d+)?F?|\d+L)(?!\Y)
    - name: case cast
      style: Keyword
      parent_pattern: case
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(\s*([\l_][\w.]*)\s*\)
    - name: case cast type
      style: Storage Type
      parent_pattern: case cast
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: case variable
      style: Identifier1
      parent_pattern: case
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\l_][\\w.]*"
    - name: case signs
      style: Keyword
      parent_pattern: case
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[-+*/<>^&|%()]"
    - name: case error
      style: Flag
      parent_pattern: case
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: label
      style: Label
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ([;{}:])
      end_re: "[\\l_]\\w*\\s*:"
      error_re: "[^\\s\\n]"
    - name: label qualifier
      style: Keyword
      parent_pattern: label
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: labelref
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:break|continue)>\s*\n?\s*([\l_]\w*)?(?=\s*\n?\s*;)
    - name: labelref name
      style: Label
      parent_pattern: labelref
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: instanceof
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <instanceof>\s*\n?\s*([\l_][\w.]*)
    - name: instanceof class
      style: Storage Type
      parent_pattern: instanceof
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: newarray
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: new\s*[\n\s]\s*([\l_][\w\.]*)\s*\n?\s*(?=\[)
    - name: newarray type
      style: Storage Type
      parent_pattern: newarray
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: constructor def
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(abstract|final|native|private|protected|public|static|synchronized)\s*[\n|\s]\s*[\l_]\w*\s*\n?\s*(?=\()
    - name: constructor def modifier
      style: Keyword
      parent_pattern: constructor def
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: keyword - modifiers
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:abstract|final|native|private|protected|public|static|transient|synchronized|volatile)>
    - name: keyword - control flow
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:catch|do|else|finally|for|if|return|switch|throw|try|while)>
    - name: keyword - calc value
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:new|super|this)>
    - name: keyword - literal value
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:false|null|true)>
    - name: function def
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <([\l_][\w\.]*)>((?:\s*\[\s*\])*)\s*[\n|\s]\s*<[\l_]\w*>\s*\n?\s*(?=\()
    - name: function def type
      style: Storage Type
      parent_pattern: function def
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: function def type brackets
      style: Keyword
      parent_pattern: function def
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: function call
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <[\l_]\w*>\s*\n?\s*(?=\()
    - name: cast
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[^\\w\\s]\\s*\\n?\\s*\\(\\s*([\\l_][\\w\\.]*)\\s*\\)"
    - name: cast type
      style: Storage Type
      parent_pattern: cast
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: declaration
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <[\l_][\w\.]*>((:?\s*\[\s*\]\s*)*)(?=\s*\n?\s*(?!instanceof)[\l_]\w*)
    - name: declaration brackets
      style: Keyword
      parent_pattern: declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: variable
      style: Identifier1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <[\l_]\w*>
    - name: braces and parens
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[(){}[\\]]"
    - name: signs
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[-+*/%=,.;:<>!|&^?]"
    - name: error
      style: Flag
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
JavaScript:
  line_context: 1
  char_context: 0
  patterns:
    - name: DSComment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: //
      end_re: $
    - name: MLComment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: DQColors
      style: Text Arg1
      parent_pattern: DQStrings
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|#[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9]
    - name: SQColors
      style: Text Arg1
      parent_pattern: SQStrings
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|(#)[A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-Fa-f0-9][A-F-af0-9]
    - name: Numeric
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((0(x|X)[0-9a-fA-F]*)|[0-9.]+((e|E)(\+|-)?)?[0-9]*)(L|l|UL|ul|u|U|F|f)?(?!\Y)
    - name: Events
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(onAbort|onBlur|onClick|onChange|onDblClick|onDragDrop|onError|onFocus|onKeyDown|onKeyPress|onLoad|onMouseDown|onMouseMove|onMouseOut|onMouseOver|onMouseUp|onMove|onResize|onSelect|onSubmit|onUnload)>
    - name: Braces
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}]"
    - name: Statements
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(break|continue|else|for|if|in|new|return|this|typeof|var|while|with)>
    - name: Function
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: function[\t ]+([a-zA-Z0-9_]+)[\t \(]+
      end_re: "[\\n{]"
    - name: FunctionName
      style: Storage Type
      parent_pattern: Function
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: FunctionArgs
      style: Text Arg
      parent_pattern: Function
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
    - name: Parentheses
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\(\\)]"
    - name: BuiltInObjectType
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(anchor|Applet|Area|Array|button|checkbox|Date|document|elements|FileUpload|form|frame|Function|hidden|history|Image|link|location|Math|navigator|Option|password|Plugin|radio|reset|select|string|submit|text|textarea|window)>
    - name: SQStrings
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n
    - name: DQStrings
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: EventCapturing
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: captureEvents|releaseEvents|routeEvent|handleEvent
      end_re: \)
      error_re: \n
    - name: PredefinedMethods
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(abs|acos|alert|anchor|asin|atan|atan2|back|big|blink|blur|bold|ceil|charAt|clear|clearTimeout|click|close|confirm|cos|escape|eval|exp|fixed|floor|focus|fontcolor|fontsize|forward|getDate|getDay|getHours|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getYear|go|indexOf|isNaN|italics|javaEnabled|join|lastIndexOf|link|log|max|min|open|parse|parseFloat|parseInt|pow|prompt|random|reload|replace|reset|reverse|round|scroll|select|setDate|setHours|setMinutes|setMonth|setSeconds|setTimeout|setTime|setYear|sin|small|sort|split|sqrt|strike|sub|submit|substring|sup|taint|tan|toGMTString|toLocaleString|toLowerCase|toString|toUpperCase|unescape|untaint|UTC|write|writeln)>
    - name: Properties
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(action|alinkColor|anchors|appCodeName|appName|appVersion|bgColor|border|checked|complete|cookie|defaultChecked|defaultSelected|defaultStatus|defaultValue|description|E|elements|enabledPlugin|encoding|fgColor|filename|forms|frames|hash|height|host|hostname|href|hspace|index|lastModified|length|linkColor|links|LN2|LN10|LOG2E|LOG10E|lowsrc|method|name|opener|options|parent|pathname|PI|port|protocol|prototype|referrer|search|selected|selectedIndex|self|SQRT1_2|SQRT2|src|status|target|text|title|top|type|URL|userAgent|value|vlinkColor|vspace|width|window)>
    - name: Operators
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[= ; ->]|[/]|&|\\|"
LaTeX:
  line_context: 1
  char_context: 0
  patterns:
    - name: Comment
      style: Text Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%"
      end_re: $
    - name: Parameter
      style: Text Arg
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#[0-9]*"
    - name: Special Chars
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}&]"
    - name: Escape Chars
      style: Text Escape
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[$&%#_{}]
    - name: Super Sub 1 Char
      style: Text Arg2
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?:\^|_)(?:\\\l+|#\d|[^{\\])
    - name: Verbatim Begin End
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\begin\{verbatim\*?}
      end_re: \\end\{verbatim\*?}
    - name: Verbatim BG Color
      style: Keyword
      parent_pattern: Verbatim Begin End
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: Verbatim
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\\verb\*?)([^\l\s\*]).*?(\2)
    - name: Verbatim Color
      style: Keyword
      parent_pattern: Verbatim
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\2\3
      end_re: ""
    - name: Inline Math
      style: LaTeX Math
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!#\d)(?:\$|\\\()
      end_re: \$|\\\)
      error_re: \\\(|(?n[^\\]%)
    - name: Math Color
      style: Keyword
      parent_pattern: Inline Math
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: Math Escape Chars
      style: Text Escape
      parent_pattern: Inline Math
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\$
    - name: No Arg Command
      style: Text Key
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:left|right)[\[\]{}()]
    - name: Command
      style: Text Key
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[_^]|[\\\\@](?:a'|a`|a=|[A-Za-z]+\\*?|\\\\\\*|[-@_='`^\"|\\[\\]*:!+<>/~.,\\\\ ])"
      end_re: nevermatch
      error_re: "[^{[(]"
    - name: Cmd Brace Args
      style: Text Arg2
      parent_pattern: Command
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{
      end_re: "}"
      error_re: (?<=^%)|\\]|\$\$|\\end\{equation\}
    - name: Brace Color
      style: Text Arg
      parent_pattern: Cmd Brace Args
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: Cmd Paren Args
      style: Text Arg2
      parent_pattern: Command
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
      error_re: $
    - name: Paren Color
      style: Text Arg
      parent_pattern: Cmd Paren Args
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: Cmd Bracket Args
      style: Text Arg2
      parent_pattern: Command
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \[
      end_re: \]
      error_re: $|\\\]
    - name: Bracket Color
      style: Text Arg
      parent_pattern: Cmd Bracket Args
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: Sub Cmd Bracket Args Esc
      style: Plain
      parent_pattern: Sub Cmd Bracket Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\}
    - name: Sub Cmd Bracket Args
      style: Preprocessor1
      parent_pattern: Cmd Bracket Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{
      end_re: \}
      error_re: $|\\\]
    - name: Sub Command
      style: Text Key1
      parent_pattern: Cmd Brace Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?:[_^]|(?:[\\@](?:[A-Za-z]+\*?|[^A-Za-z$&%#{}~\\ \t])))
    - name: Sub Brace
      style: Text Arg2
      parent_pattern: Cmd Brace Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{
      end_re: "}"
    - name: Sub Sub Brace
      style: Text Arg2
      parent_pattern: Sub Brace
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{
      end_re: "}"
    - name: Sub Sub Sub Brace
      style: Text Arg2
      parent_pattern: Sub Sub Brace
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{
      end_re: "}"
    - name: Sub Sub Sub Sub Brace
      style: Text Arg2
      parent_pattern: Sub Sub Sub Brace
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{
      end_re: "}"
    - name: Sub Paren
      style: Text Arg2
      parent_pattern: Cmd Paren Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
      error_re: $
    - name: Sub Sub Paren
      style: Text Arg2
      parent_pattern: Sub Paren
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
      error_re: $
    - name: Sub Sub Sub Paren
      style: Text Arg2
      parent_pattern: Sub Sub Paren
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
      error_re: $
    - name: Sub Parameter
      style: Text Arg
      parent_pattern: Cmd Brace Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#[0-9]*"
    - name: Sub Spec Chars
      style: Text Arg
      parent_pattern: Cmd Brace Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}$&]"
    - name: Sub Esc Chars
      style: Text Arg1
      parent_pattern: Cmd Brace Args
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[$&%#_{}~^\\]
Lex:
  line_context: 1
  char_context: 0
  patterns:
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: meta string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\".*\\"
    - name: preprocessor line
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^\s*#\s*(include|define|if|ifn?def|line|error|else|endif|elif|undef|pragma)>
      end_re: $
    - name: string escape chars
      style: String1
      parent_pattern: string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: preprocessor esc chars
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: preprocessor comment
      style: Comment
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: preprocessor string
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: prepr string esc chars
      style: String1
      parent_pattern: preprocessor string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: character constant
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: "[^\\\\][^']"
    - name: numeric constant
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?(?!\Y)
    - name: storage keyword
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(const|extern|auto|register|static|unsigned|signed|volatile|char|double|float|int|long|short|void|typedef|struct|union|enum)>
    - name: keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(return|goto|if|else|case|default|switch|break|continue|while|do|for|sizeof)>
    - name: lex keyword
      style: Text Arg
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(yylval|yytext|input|unput|output|lex_input|lex_output|yylex|yymore|yyless|yyin|yyout|yyleng|yywtext|yywleng|yyterminate|REJECT|ECHO|BEGIN|YY_NEW_FILE|yy_create_buffer|yy_switch_to_buffer|yy_delete_buffer|YY_CURRENT_BUFFER|YY_BUFFER_STATE|YY_DECL|YY_INPUT|yywrap|YY_USER_ACTION|YY_USER_INIT|YY_BREAK)>
    - name: stdlib
      style: Subroutine
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(BUFSIZ|CHAR_BIT|CHAR_MAX|CHAR_MIN|CLOCKS_PER_SEC|DBL_DIG|DBL_EPSILON|DBL_MANT_DIG|DBL_MAX|DBL_MAX_10_EXP|DBL_MAX_EXP|DBL_MIN|DBL_MIN_10_EXP|DBL_MIN_EXP|EDOM|EOF|ERANGE|EXIT_FAILURE|EXIT_SUCCESS|FILE|FILENAME_MAX|FLT_DIG|FLT_EPSILON|FLT_MANT_DIG|FLT_MAX|FLT_MAX_10_EXP|FLT_MAX_EXP|FLT_MIN|FLT_MIN_10_EXP|FLT_MIN_EXP|FLT_RADIX|FLT_ROUNDS|FOPEN_MAX|HUGE_VAL|INT_MAX|INT_MIN|LC_ALL|LC_COLLATE|LC_CTYPE|LC_MONETARY|LC_NUMERIC|LC_TIME|LDBL_DIG|LDBL_EPSILON|LDBL_MANT_DIG|LDBL_MAX|LDBL_MAX_10_EXP|LDBL_MAX_EXP|LDBL_MIN|LDBL_MIN_10_EXP|LDBL_MIN_EXP|LONG_MAX|LONG_MIN|L_tmpnam|MB_CUR_MAX|MB_LEN_MAX|nullptr|RAND_MAX|SCHAR_MAX|SCHAR_MIN|SEEK_CUR|SEEK_END|SEEK_SET|SHRT_MAX|SHRT_MIN|SIGABRT|SIGFPE|SIGILL|SIGINT|SIGSEGV|SIGTERM|SIG_DFL|SIG_ERR|SIG_IGN|TMP_MAX|UCHAR_MAX|UINT_MAX|ULONG_MAX|USHRT_MAX|WCHAR_MAX|WCHAR_MIN|WEOF|_IOFBF|_IOLBF|_IONBF|abort|abs|acos|asctime|asin|assert|atan|atan2|atexit|atof|atoi|atol|bsearch|btowc|calloc|ceil|clearerr|clock|clock_t|cos|cosh|ctime|difftime|div|div_t|errno|exit|exp|fabs|fclose|feof|ferror|fflush|fgetc|fgetpos|fgets|fgetwc|fgetws|floor|fmod|fopen|fpos_t|fprintf|fputc|fputs|fputwc|fputws|fread|free|freopen|frexp|fscanf|fseek|fsetpos|ftell|fwide|fwprintf|fwrite|fwscanf|getc|getchar|getenv|gets|getwc|getwchar|gmtime|isalnum|isalpha|iscntrl|isdigit|isgraph|islower|isprint|ispunct|isspace|isupper|iswalnum|iswalpha|iswcntrl|iswctype|iswdigit|iswgraph|iswlower|iswprint|iswpunct|iswspace|iswupper|iswxdigit|isxdigit|jmp_buf|labs|lconv|ldexp|ldiv|ldiv_t|localeconv|localtime|log|log10|longjmp|malloc|mblen|mbrlen|mbrtowc|mbsinit|mbsrtowcs|mbstate_t|mbstowcs|mbtowc|memchr|memcmp|memcpy|memmove|memset|mktime|modf|offsetof|perror|pow|printf|ptrdiff_t|putc|puts|putwc|putwchar|qsort|raise|rand|realloc|remove|rename|rewind|scanf|setbuf|setjmp|setlocale|setvbuf|sig_atomic_t|signal|sin|sinh|size_t|sprintf|sqrt|srand|sscanf|stderr|stdin|stdout|strcat|strchr|strcmp|strcoll|strcpy|strcspn|strerror|strftime|strlen|strncat|strncmp|strncpy|strtoul|strpbrk|strrchr|strspn|strstr|strtod|strtok|strtol|strxfrm|swprintf|swscanf|system|tan|tanh|time|time_t|tm|tmpfile|tmpnam|tolower|toupper|towctrans|towlower|towupper|ungetc|ungetwc|va_arg|va_end|va_list|va_start|vfwprintf|vprintf|vsprintf|vswprintf|vwprintf|wint_t|wmemchr|wmemcmp|wmemcpy|wmemmove|wmemset|wprintf|wscanf)>
    - name: label
      style: Flag
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <goto>|(^[ \t]*[A-Za-z_][A-Za-z0-9_]*[ \t]*:)
    - name: braces
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}]"
    - name: markers
      style: Flag
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(%\{|%\}|%%)(?!\Y)
Makefile:
  line_context: 8
  char_context: 0
  patterns:
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Comment Continuation
      style: Keyword
      parent_pattern: Comment
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Assignment
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)[A-Za-z0-9_+][^ \t]*[ \t]*(\+|:)?=
      end_re: $
    - name: Assignment Continuation
      style: Keyword
      parent_pattern: Assignment
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Assignment Comment
      style: Comment
      parent_pattern: Assignment
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Dependency Line
      style: Text Key1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)(.DEFAULT|.DELETE_ON_ERROR|.EXPORT_ALL_VARIABLES.IGNORE|.INTERMEDIATE|.PHONY|.POSIX|.PRECIOUS|.SECONDARY|.SILENT|.SUFFIXES)*(([A-Za-z0-9./$(){} _@^<*?%+-]*(\\\n)){,8}[A-Za-z0-9./$(){} _@^<*?%+-]*)::?
      end_re: $|;
    - name: Dep Target Special
      style: Text Key1
      parent_pattern: Dependency Line
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: Dep Target
      style: Text Key
      parent_pattern: Dependency Line
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3
      end_re: ""
    - name: Dep Continuation
      style: Keyword
      parent_pattern: Dependency Line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Dep Comment
      style: Comment
      parent_pattern: Dependency Line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Dep Internal Macro
      style: Preprocessor1
      parent_pattern: Dependency Line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([<@*?%]|\$@)
    - name: Dep Macro
      style: Preprocessor
      parent_pattern: Dependency Line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([A-Za-z0-9_]|\([^)]*\)|\{[^}]*})
    - name: Continuation
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\$
    - name: Macro
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([A-Za-z0-9_]|\([^)]*\)|\{[^}]*})
    - name: Internal Macro
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([<@*?%]|\$@)
    - name: Escaped Dollar
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\$
    - name: Include
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)include[ \t]
    - name: Exports
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)<export|unexport>[ \t]
      end_re: $
    - name: Exports var
      style: Keyword
      parent_pattern: Exports
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .[A-Za-z0-9_+]*
      end_re: $
    - name: Conditionals
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)<ifeq|ifneq>[ \t]
    - name: Conditionals ifdefs
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)<ifdef|ifndef>[ \t]
      end_re: $
    - name: Conditionals ifdefs var
      style: Preprocessor
      parent_pattern: Conditionals ifdefs
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .[A-Za-z0-9_+]*
      end_re: $
    - name: Conditional Ends
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)<else|endif>
    - name: vpath
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)<vpath>[ \t]
    - name: define
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)<define>[ \t]
      end_re: $
    - name: define var
      style: Preprocessor
      parent_pattern: define
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .[A-Za-z0-9_+]*
      end_re: $
    - name: define Ends
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^( *| [ \t]*)<endef>
Matlab:
  line_context: 1
  char_context: 0
  patterns:
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%"
      end_re: $
    - name: Comment in Octave
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(break|clear|else|elseif|for|function|global|if|return|then|while|end(if|for|while|function))>
    - name: Transpose
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\w.]('+)"
    - name: Paren transposed
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \)('+)
    - name: Paren transp close
      style: Plain
      parent_pattern: Paren transposed
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Parentheses
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\(\\)]"
    - name: Brackets transposed
      style: Text Key1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \]('+)
    - name: Brack transp close
      style: Plain
      parent_pattern: Brackets transposed
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Brackets
      style: Text Key1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\[\\]]"
    - name: Braces transposed
      style: Text Arg
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \}('+)
    - name: Braces transp close
      style: Plain
      parent_pattern: Braces transposed
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Braces
      style: Text Arg
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\{\\}]"
    - name: String
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
    - name: Numeric const
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(((\d+\.?\d*)|(\.\d+))([eE][+\-]?\d+)?)(?!\Y)
    - name: Three periods to end
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\.\.\.)
      end_re: $
    - name: Three periods
      style: Keyword
      parent_pattern: Three periods to end
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Shell command
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "!"
      end_re: $
    - name: Comment in shell cmd
      style: Comment
      parent_pattern: Shell command
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%"
      end_re: $
    - name: Relational operators
      style: Text Arg1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ==|~=|\<=|\>=|\<|\>
    - name: Wrong logical ops
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&&|\\|\\|"
    - name: Logical operators
      style: Text Arg2
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ~|&|\|
NEdit Macro:
  line_context: 2
  char_context: 0
  patterns:
    - name: README
      style: Flag
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: NEdit Macro syntax highlighting patterns, version 2.6, maintainer Thorsten Haude, nedit at thorstenhau.de
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Built-in Misc Vars
      style: Identifier
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)\$(?:active_pane|args|calltip_ID|column|cursor|display_width|empty_array|file_name|file_path|language_mode|line|locked|max_font_width|min_font_width|modified|n_display_lines|n_panes|rangeset_list|read_only|selection_(?:start|end|left|right)|server_name|text_length|top_line)>
    - name: Built-in Pref Vars
      style: Identifier2
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)\$(?:auto_indent|em_tab_dist|file_format|font_name|font_name_bold|font_name_bold_italic|font_name_italic|highlight_syntax|incremental_backup|incremental_search_line|make_backup_copy|match_syntax_based|overtype_mode|show_line_numbers|show_matching|statistics_line|tab_dist|use_tabs|wrap_margin|wrap_text)>
    - name: Built-in Special Vars
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)\$(?:[1-9]|list_dialog_button|n_args|read_status|search_end|shell_cmd_status|string_dialog_button|sub_sep)>
    - name: Built-in Subrs
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:append_file|beep|calltip|clipboard_to_string|dialog|focus_window|get_character|get_pattern_(by_name|at_pos)|get_range|get_selection|get_style_(by_name|at_pos)|getenv|kill_calltip|length|list_dialog|max|min|rangeset_(?:add|create|destroy|get_by_name|includes|info|invert|range|set_color|set_mode|set_name|subtract)|read_file|replace_in_string|replace_range|replace_selection|replace_substring|search|search_string|select|select_rectangle|set_cursor_pos|set_language_mode|set_locked|shell_command|split|string_compare|string_dialog|string_to_clipboard|substring|t_print|tolower|toupper|valid_number|write_file)>
    - name: Menu Actions
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:new|open|open-dialog|open_dialog|open-selected|open_selected|close|save|save-as|save_as|save-as-dialog|save_as_dialog|revert-to-saved|revert_to_saved|revert_to_saved_dialog|include-file|include_file|include-file-dialog|include_file_dialog|load-macro-file|load_macro_file|load-macro-file-dialog|load_macro_file_dialog|load-tags-file|load_tags_file|load-tags-file-dialog|load_tags_file_dialog|unload_tags_file|load_tips_file|load_tips_file_dialog|unload_tips_file|print|print-selection|print_selection|exit|undo|redo|delete|select-all|select_all|shift-left|shift_left|shift-left-by-tab|shift_left_by_tab|shift-right|shift_right|shift-right-by-tab|shift_right_by_tab|find|find-dialog|find_dialog|find-again|find_again|find-selection|find_selection|find_incremental|start_incremental_find|replace|replace-dialog|replace_dialog|replace-all|replace_all|replace-in-selection|replace_in_selection|replace-again|replace_again|replace_find|replace_find_same|replace_find_again|goto-line-number|goto_line_number|goto-line-number-dialog|goto_line_number_dialog|goto-selected|goto_selected|mark|mark-dialog|mark_dialog|goto-mark|goto_mark|goto-mark-dialog|goto_mark_dialog|match|select_to_matching|goto_matching|find-definition|find_definition|show_tip|split-window|split_window|close-pane|close_pane|uppercase|lowercase|fill-paragraph|fill_paragraph|control-code-dialog|control_code_dialog|filter-selection-dialog|filter_selection_dialog|filter-selection|filter_selection|execute-command|execute_command|execute-command-dialog|execute_command_dialog|execute-command-line|execute_command_line|shell-menu-command|shell_menu_command|macro-menu-command|macro_menu_command|bg_menu_command|post_window_bg_menu|beginning-of-selection|beginning_of_selection|end-of-selection|end_of_selection|repeat_macro|repeat_dialog|raise_window|focus_pane|set_statistics_line|set_incremental_search_line|set_show_line_numbers|set_auto_indent|set_wrap_text|set_wrap_margin|set_highlight_syntax|set_make_backup_copy|set_incremental_backup|set_show_matching|set_match_syntax_based|set_overtype_mode|set_locked|set_tab_dist|set_em_tab_dist|set_use_tabs|set_fonts|set_language_mode)(?=\s*\()
    - name: Text Actions
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:self-insert|self_insert|grab-focus|grab_focus|extend-adjust|extend_adjust|extend-start|extend_start|extend-end|extend_end|secondary-adjust|secondary_adjust|secondary-or-drag-adjust|secondary_or_drag_adjust|secondary-start|secondary_start|secondary-or-drag-start|secondary_or_drag_start|process-bdrag|process_bdrag|move-destination|move_destination|move-to|move_to|move-to-or-end-drag|move_to_or_end_drag|end_drag|copy-to|copy_to|copy-to-or-end-drag|copy_to_or_end_drag|exchange|process-cancel|process_cancel|paste-clipboard|paste_clipboard|copy-clipboard|copy_clipboard|cut-clipboard|cut_clipboard|copy-primary|copy_primary|cut-primary|cut_primary|newline|newline-and-indent|newline_and_indent|newline-no-indent|newline_no_indent|delete-selection|delete_selection|delete-previous-character|delete_previous_character|delete-next-character|delete_next_character|delete-previous-word|delete_previous_word|delete-next-word|delete_next_word|delete-to-start-of-line|delete_to_start_of_line|delete-to-end-of-line|delete_to_end_of_line|forward-character|forward_character|backward-character|backward_character|key-select|key_select|process-up|process_up|process-down|process_down|process-shift-up|process_shift_up|process-shift-down|process_shift_down|process-home|process_home|forward-word|forward_word|backward-word|backward_word|forward-paragraph|forward_paragraph|backward-paragraph|backward_paragraph|beginning-of-line|beginning_of_line|end-of-line|end_of_line|beginning-of-file|beginning_of_file|end-of-file|end_of_file|next-page|next_page|previous-page|previous_page|page-left|page_left|page-right|page_right|toggle-overstrike|toggle_overstrike|scroll-up|scroll_up|scroll-down|scroll_down|scroll_left|scroll_right|scroll-to-line|scroll_to_line|select-all|select_all|deselect-all|deselect_all|focusIn|focusOut|process-return|process_return|process-tab|process_tab|insert-string|insert_string|mouse_pan)>
    - name: Keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:break|continue|define|delete|else|for|if|in|return|while)>
    - name: Braces
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}\\[\\]]"
    - name: Global Variable
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$[A-Za-z0-9_]+
    - name: String
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: String Escape Char
      style: Text Escape
      parent_pattern: String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: Numeric Const
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)-?[0-9]+>
    - name: Macro Definition
      style: Subroutine1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<=define)\s+\w+
    - name: Custom Macro
      style: Subroutine1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \w+(?=\s*(?:\\\n)?\s*[\(])
    - name: Variables
      style: Identifier1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \w+
Pascal:
  line_context: 1
  char_context: 0
  patterns:
    - name: TP Directives
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \{\$
      end_re: \}
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(\*|\{
      end_re: \*\)|\}
    - name: String
      style: String
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n
    - name: Array delimitors
      style: Character Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(\.|\.\)|\[|\]
    - name: Parentheses
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(|\)
    - name: X Numeric Values
      style: Text Key
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <([2-9]|[12]\d|3[0-6])#[\d\l]+>
    - name: TP Numeric Values
      style: Text Key1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(#\d+|\$[\da-fA-F]+)>
    - name: Numeric Values
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <\d+(\.\d+)?((e|E)(\+|-)?\d+)?>
    - name: Reserved Words 1
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iBegin|Const|End|Program|Record|Type|Var)>
    - name: Reserved Words 2
      style: Identifier
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iForward|Goto|Label|Of|Packed|With)>
    - name: X Reserved Words
      style: Identifier1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iBindable|Export|Implementation|Import|Interface|Module|Only|Otherwise|Protected|Qualified|Restricted|Value)>
    - name: TP Reserved Words
      style: Text Comment
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iAbsolute|Assembler|Exit|External|Far|Inline|Interrupt|Near|Private|Unit|Uses)>
    - name: Data Types
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iArray|Boolean|Char|File|Integer|Real|Set|Text)>
    - name: X Data Types
      style: Text Arg1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iBindingType|Complex|String|TimeStamp)>
    - name: TP Data Types
      style: Text Arg2
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iByte|Comp|Double|Extended|LongInt|ShortInt|Single|Word)>
    - name: Predefined Consts
      style: String1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iFalse|Input|MaxInt|Nil|Output|True)>
    - name: X Predefined Consts
      style: String2
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iEpsReal|MaxChar|MaxReal|MinReal|StandardInput|StandardOutput)>
    - name: Conditionals
      style: Ada Attributes
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iCase|Do|DownTo|Else|For|If|Repeat|Then|To|Until|While)>
    - name: Proc declaration
      style: Character Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iProcedure)>
    - name: Predefined Proc
      style: Subroutine
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iDispose|Get|New|Pack|Page|Put|Read|ReadLn|Reset|Rewrite|Unpack|Write|WriteLn)>
    - name: X Predefined Proc
      style: Subroutine1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iBind|Extend|GetTimeStamp|Halt|ReadStr|SeekRead|SeekUpdate|SeekWrite|Unbind|Update|WriteStr)>
    - name: Func declaration
      style: Identifier
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iFunction)>
    - name: Predefined Func
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iAbs|Arctan|Chr|Cos|Eof|Eoln|Exp|Ln|Odd|Ord|Pred|Round|Sin|Sqr|Sqrt|Succ|Trunc)>
    - name: X Predefined Func
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iArg|Binding|Card|Cmplx|Date|Empty|Eq|Ge|Gt|Im|Index|LastPosition|Le|Length|Lt|Ne|Polar|Position|Re|SubStr|Time|Trim)>
    - name: X Operators
      style: Text Arg1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\>\<|\*\*)|<(?iAnd_Then|Or_Else|Pow)>
    - name: Assignment
      style: Plain
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: :=
    - name: Operators
      style: Text Arg
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<|\>|=|\^|@)|<(?iAnd|Div|In|Mod|Not|Or)>
    - name: TP Operators
      style: Text Arg2
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iShl|Shr|Xor)>
Perl:
  line_context: 2
  char_context: 0
  patterns:
    - name: dq here doc
      style: Label
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<\<("?))EOF(\2.*)$
      end_re: ^EOF>
    - name: dq here doc delims
      style: Keyword
      parent_pattern: dq here doc
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\3
    - name: dq here doc esc chars
      style: Text Escape
      parent_pattern: dq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([nrtfbaeulULQE@%\$\\]|0[0-7]+|x[0-9a-fA-F]+|c\l)
    - name: dq here doc variables
      style: Identifier1
      parent_pattern: dq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_./,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: dq here doc content
      style: String
      parent_pattern: dq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: dq string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)"
      end_re: "\""
      error_re: \n\s*\n
    - name: dq string delims
      style: Keyword
      parent_pattern: dq string
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: dq string esc chars
      style: Text Escape
      parent_pattern: dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([nrtfbaeulULQE"@%\$\\]|0[0-7]+|x[0-9a-fA-F]+|c\l)
    - name: dq string variables
      style: Identifier1
      parent_pattern: dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_./,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: gen dq string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <qq/
      end_re: (?!\\)/
      error_re: \n\s*\n
    - name: gen dq string delims
      style: Keyword
      parent_pattern: gen dq string
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: gen dq string esc chars
      style: Text Escape
      parent_pattern: gen dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([nrtfbaeulULQE@%\$\\]|0[0-7]+|x[0-9a-fA-F]+|c\l)
    - name: gen dq string variables
      style: Identifier1
      parent_pattern: gen dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_./,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: sq here doc
      style: Label
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<\<')EOF('.*)$
      end_re: ^EOF>
    - name: sq here doc delims
      style: Keyword
      parent_pattern: sq here doc
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\2
    - name: sq here doc esc chars
      style: Text Escape
      parent_pattern: sq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\\
    - name: sq here doc content
      style: String1
      parent_pattern: sq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: sq string
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)'
      end_re: "'"
      error_re: \n\s*\n
    - name: sq string delims
      style: Keyword
      parent_pattern: sq string
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: sq string esc chars
      style: Text Escape
      parent_pattern: sq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(\\|')
    - name: gen sq string
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <q/
      end_re: (?!\\)/
      error_re: \n\s*\n
    - name: gen sq string delims
      style: Keyword
      parent_pattern: gen sq string
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: gen sq string esc chars
      style: Text Escape
      parent_pattern: gen sq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(\\|/)
    - name: implicit sq
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[-\\w]+(?=\\s*=\\>)|(\\{)[-\\w]+(\\})"
    - name: implicit sq delims
      style: Keyword
      parent_pattern: implicit sq
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\2
    - name: word list
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <qw\(
      end_re: \)
      error_re: \n\s*\n
    - name: word list content
      style: String1
      parent_pattern: word list
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: bq here doc
      style: Label
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<\<`)EOF(`.*)$
      end_re: ^EOF>
    - name: bq here doc delims
      style: Keyword
      parent_pattern: bq here doc
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\2
    - name: bq here doc comment
      style: Comment
      parent_pattern: bq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: bq here doc variables
      style: Identifier1
      parent_pattern: bq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_./,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: bq here doc content
      style: String1
      parent_pattern: bq here doc
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: .
    - name: bq string
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)`
      end_re: "`(?!\\Y)"
      error_re: \n\s*\n
    - name: bq string delims
      style: Keyword
      parent_pattern: bq string
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: bq string variables
      style: Identifier1
      parent_pattern: bq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_./,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: gen bq string
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <qx/
      end_re: (?!\\)/
      error_re: \n\s*\n
    - name: gen bq string delims
      style: Keyword
      parent_pattern: gen bq string
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: gen bq string variables
      style: Identifier1
      parent_pattern: gen bq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_./,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: gen bq string esc chars
      style: Text Escape
      parent_pattern: gen bq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\/
    - name: transliteration
      style: String
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <((y|tr)/)(\\/|[^/])+(/)(\\/|[^/])*(/[cds]*)
    - name: transliteration delims
      style: Keyword
      parent_pattern: transliteration
      defer_parsing: true
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\4\6
    - name: last array index
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$#([\l_](\w|::(?=\w))*)?
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: label
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?:^|;)\s*<([A-Z_]+)>\s*:(?=(?:[^:]|\n)))|(goto|last|next|redo)\s+(<((if|unless)|[A-Z_]+)>|)
    - name: label identifier
      style: Label
      parent_pattern: label
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2\5
    - name: label keyword
      style: Keyword
      parent_pattern: label
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3\6
    - name: handle
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<)[A-Z_]+(\>)|(bind|binmode|close(?:dir)?|connect|eof|fcntl|fileno|flock|getc|getpeername|getsockname|getsockopt|ioctl|listen|open(?:dir)?|recv|read(?:dir)?|rewinddir|seek(?:dir)?|send|setsockopt|shutdown|socket|sysopen|sysread|sysseek|syswrite|tell(?:dir)?|write)>\s*(\(?)\s*[A-Z_]+>|<(accept|pipe|socketpair)>\s*(\(?)\s*[A-Z_]+\s*(,)\s*[A-Z_]+>|(print|printf|select)>\s*(\(?)\s*[A-Z_]+>(?!\s*,)
    - name: handle delims
      style: Keyword
      parent_pattern: handle
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\2\4\6\7\9
    - name: handle functions
      style: Subroutine
      parent_pattern: handle
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3\5\8
    - name: statements
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(if|until|while|elsif|else|unless|for(each)?|continue|last|goto|next|redo|do(?=\s*\{)|BEGIN|END)>
    - name: packages and modules
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(bless|caller|import|no|package|prototype|require|return|INIT|CHECK|BEGIN|END|use|new)>
    - name: pragm modules
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(attrs|autouse|base|blib|constant|diagnostics|fields|integer|less|lib|locale|ops|overload|re|sigtrap|strict|subs|vars|vmsish)>
    - name: standard methods
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(can|isa|VERSION)>
    - name: file tests
      style: Subroutine
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: -[rwxRWXoOezsfdlSpbcugktTBMAC]>
    - name: subr header
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <sub\s+<([\l_]\w*)>
      end_re: (?:\{|;)
    - name: subr header coloring
      style: Plain
      parent_pattern: subr header
      defer_parsing: true
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: subr prototype
      style: Flag
      parent_pattern: subr header
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
    - name: subr prototype delims
      style: Keyword
      parent_pattern: subr prototype
      defer_parsing: true
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: subr prototype chars
      style: Identifier1
      parent_pattern: subr prototype
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\?[@$%&*]|;
    - name: references
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(\$|@|%|&)(::)?[\l_](\w|::(?=\w))*|\\(\$?|@|%|&)\{(::)?[\l_](\w|::(?=\w))*\}|\\(\$|@|%|&)(?=\{)
    - name: variables
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_./,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: named operators
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|sub|x)>
    - name: library functions
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <((?# arithmetic functions)abs|atan2|cos|exp|int|log|rand|sin|sqrt|srand|time|(?# conversion functions)chr|gmtime|hex|localtime|oct|ord|vec|(?# structure conversion)pack|unpack|(?# string functions)chomp|chop|crypt|eval(?=\s*[^{])|index|lc|lcfirst|length|quotemeta|rindex|substr|uc|ucfirst|(?# array and hash functions)delete|each|exists|grep|join|keys|map|pop|push|reverse|scalar|shift|sort|splice|split|unshift|values|(?# search and replace functions)pos|study|(?# file operations)chmod|chown|link|lstat|mkdir|readlink|rename|rmdir|stat|symlink|truncate|unlink|utime|(?# input/output)binmode|close|eof|fcntl|fileno|flock|getc|ioctl|open|pipe|print|printf|read|readline|readpipe|seek|select|sprintf|sysopen|sysread|sysseek|syswrite|tell|(?# formats)formline|write|(?# tying variables)tie|tied|untie|(?# directory reading routines)closedir|opendir|readdir|rewinddir|seekdir|telldir|(?# system interaction)alarm|chdir|chroot|die|exec|exit|fork|getlogin|getpgrp|getppid|getpriority|glob|kill|setpgrp|setpriority|sleep|syscall|system|times|umask|wait|waitpid|warn|(?# networking)accept|bind|connect|getpeername|getsockname|getsockopt|listen|recv|send|setsockopt|shutdown|socket|socketpair|(?# system V ipc)msgctl|msgget|msgrcv|msgsnd|semctl|semget|semop|shmctl|shmget|shmread|shmwrite|(?# miscellaneous)defined|do|dump|eval(?=\s*\{)|local|my|ref|reset|undef|(?# informations from system databases)endpwent|getpwent|getpwnam|getpwuid|setpwent|endgrent|getgrent|getgrgid|getgrnam|setgrent|endnetent|getnetbyaddr|getnetbyname|getnetent|setnetent|endhostend|gethostbyaddr|gethostbyname|gethostent|sethostent|endservent|getservbyname|getservbyport|getservent|setservent|endprotoent|getprotobyname|getprotobynumber|getprotoent|setprotoent)>
    - name: subroutine call
      style: Subroutine1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (&|-\>)\w(\w|::)*(?!\Y)|<\w(\w|::)*(?=\s*\()
    - name: symbolic operators
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ">[-<>+.*/\\\\?!~=%^&:]<"
    - name: braces and parens
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\[\\]{}\\(\\)\\<\\>]"
    - name: numerics
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((?i0x[\da-f]+)|0[0-7]+|(\d+\.?\d*|\.\d+)([eE][\-+]?\d+)?|[\d_]+)(?!\Y)
    - name: tokens
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: __(FILE|PACKAGE|LINE|DIE|WARN)__
    - name: end token
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^__(END|DATA)__
      end_re: never_match_this_pattern
    - name: end token delim
      style: Preprocessor
      parent_pattern: end token
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
    - name: pod
      style: Text Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?=^=)
      end_re: ^=cut
    - name: re match
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((m|qr|~\s*)/)
      end_re: (/(gc?|[imosx])*)
    - name: re match delims
      style: Keyword
      parent_pattern: re match
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: re match esc chars
      style: Text Escape
      parent_pattern: re match
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([/abdeflnrstuwzABDEGLQSUWZ+?.*$^(){}[\]|\\]|0[0-7]{2}|x[0-9a-fA-F]{2})
    - name: re match class
      style: Plain
      parent_pattern: re match
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \[\^?
      end_re: \]
    - name: re match class delims
      style: Regex
      parent_pattern: re match class
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: re match class esc chars
      style: Text Escape
      parent_pattern: re match class
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([abdeflnrstuwzABDEGLQSUWZ^\]\\-]|0[0-7]{2}|x[0-9a-fA-F]{2})
    - name: re match variables
      style: Identifier1
      parent_pattern: re match
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_.,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: re match comment
      style: Comment
      parent_pattern: re match
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(\?#[^)]*\)
    - name: re match syms
      style: Regex
      parent_pattern: re match
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[.^$[\\])|)]|\\{\\d+(,\\d*)?\\}\\??|\\((\\?([:=!>imsx]|\\<[=!]))?|[?+*]\\??"
    - name: re match refs
      style: Identifier1
      parent_pattern: re match
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[1-9]\d?
    - name: re sub
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(s/)
      end_re: (/)((?:\\/|\\[1-9]\d?|[^/])*)(/[egimosx]*)
    - name: re sub delims
      style: Keyword
      parent_pattern: re sub
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: \1\3
    - name: re sub subst
      style: String
      parent_pattern: re sub
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: \2
    - name: re sub esc chars
      style: Text Escape
      parent_pattern: re sub
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([/abdeflnrstuwzABDEGLQSUWZ+?.*$^(){}[\]|\\]|0[0-7]{2}|x[0-9a-fA-F]{2})
    - name: re sub class
      style: Plain
      parent_pattern: re sub
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \[\^?
      end_re: \]
    - name: re sub class delims
      style: Regex
      parent_pattern: re sub class
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: re sub class esc chars
      style: Text Escape
      parent_pattern: re sub class
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\([abdeflnrstuwzABDEGLQSUWZ^\]\\-]|0[0-7]{2}|x[0-9a-fA-F]{2})
    - name: re sub variables
      style: Identifier1
      parent_pattern: re sub
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-_.,"\\*?#;!@$<>(%=~^|&`'+[\]]|:(?!:)|\^[ADEFHILMOPSTWX]|ARGV|\d{1,2})|(@|\$#)(ARGV|EXPORT|EXPORT_OK|F|INC|ISA|_)>|%(ENV|EXPORT_TAGS|INC|SIG)>|(\$#?|@|%)(::)?[\l_](\w|::(?=\w))*|(\$#?|@|%)\{(::)?[\l_](\w|::(?=\w))*\}|(\$|@|%)(?=\{)
    - name: re sub comment
      style: Comment
      parent_pattern: re sub
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(\?#[^)]*\)
    - name: re sub syms
      style: Regex
      parent_pattern: re sub
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[.^$[\\])|)]|\\{\\d+(,\\d*)?\\}\\??|\\((\\?([:=!>imsx]|\\<[=!]))?|[?+*]\\??"
    - name: re sub refs
      style: Identifier1
      parent_pattern: re sub
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[1-9]\d?
    - name: info
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "version: 2.02p1; author/maintainer: Joor Loohuis, joor@loohuis-consulting.nl"
PostScript:
  line_context: 1
  char_context: 0
  patterns:
    - name: DSCcomment
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^%[%|!]
      end_re: $
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%"
      end_re: $
    - name: string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
    - name: string esc chars
      style: String2
      parent_pattern: string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(n|r|t|b|f|\\|\(|\)|[0-9][0-9]?[0-9]?)?
    - name: string2
      style: String
      parent_pattern: string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
    - name: string2 esc chars
      style: String2
      parent_pattern: string2
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(n|r|t|b|f|\\|\(|\)|[0-9][0-9]?[0-9]?)?
    - name: string3
      style: String
      parent_pattern: string2
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(
      end_re: \)
    - name: string3 esc chars
      style: String2
      parent_pattern: string3
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(n|r|t|b|f|\\|\(|\)|[0-9][0-9]?[0-9]?)?
    - name: ASCII 85 string
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<~
      end_re: ~\>
      error_re: "[^!-uz]"
    - name: Dictionary
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<\<|\>\>)
    - name: hex string
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<
      end_re: \>
      error_re: "[^0-9a-fA-F> \\t]"
    - name: Literal
      style: Text Key
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /[^/%{}\(\)\<\>\[\]\f\n\r\t ]*
    - name: Number
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((([2-9]|[1-2][0-9]|3[0-6])#[0-9a-zA-Z]*)|(((\+|-)?[0-9]+\.?[0-9]*)|((\+|-)?\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(?!\Y)
    - name: Array
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\[\\]]"
    - name: Procedure
      style: Subroutine
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}]"
    - name: Operator1
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(=|==|abs|add|aload|anchorsearch|and|arc|arcn|arcto|array|ashow|astore|atan|awidthshow|begin|bind|bitshift|bytesavailable|cachestatus|ceiling|charpath|clear|cleardictstack|cleartomark|clip|clippath|closefile|closepath|concat|concatmatrix|copy|copypage|cos|count|countdictstack|countexecstack|counttomark|currentdash|currentdict|currentfile|currentflat|currentfont|currentgray|currenthsbcolor|currentlinecap|currentlinejoin|currentlinewidth|currentmatrix|currentmiterlimit|currentpoint|currentrgbcolor|currentscreen|currenttransfer|curveto|cvi|cvlit|cvn|cvr|cvrs|cvs|cvx|def|defaultmatrix|definefont|dict|dictstack|div|dtransform|dup|echo|eexec|end|eoclip|eofill|eq|erasepage|errordict|exch|exec|execstack|executeonly|executive|exit|exitserver|exp|false|file|fill|findfont|flattenpath|floor|flush|flushfile|FontDirectory|for|forall|ge|get|getinterval|grestore|grestoreall|gsave|gt|handleerror|identmatrix|idiv|idtransform|if|ifelse|image|imagemask|index|initclip|initgraphics|initmatrix|internaldict|invertmatrix|itransform|known|kshow|le|length|lineto|ln|load|log|loop|lt|makefont|mark|matrix|maxlength|mod|moveto|mul|ne|neg|newpath|noaccess|not|null|nulldevice|or|pathbbox|pathforall|pop|print|prompt|pstack|put|putinterval|quit|rand|rcheck|rcurveto|read|readhexstring|readline|readonly|readstring|repeat|resetfile|restore|reversepath|rlineto|rmoveto|roll|rotate|round|rrand|run|save|scale|scalefont|search|serverdict|setcachedevice|setcachelimit|setcharwidth|setdash|setflat|setfont|setgray|sethsbcolor|setlinecap|setlinejoin|setlinewidth|setmatrix|setmiterlimit|setrgbcolor|setscreen|settransfer|show|showpage|sin|sqrt|srand|stack|StandardEncoding|start|status|statusdict|stop|stopped|store|string|stringwidth|stroke|strokepath|sub|systemdict|token|transform|translate|true|truncate|type|userdict|usertime|version|vmstatus|wcheck|where|widthshow|write|writehexstring|writestring|xcheck|xor)(?!\Y)
    - name: Operator2
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(arct|colorimage|cshow|currentblackgeneration|currentcacheparams|currentcmykcolor|currentcolor|currentcolorrendering|currentcolorscreen|currentcolorspace|currentcolortransfer|currentdevparams|currentglobal|currentgstate|currenthalftone|currentobjectformat|currentoverprint|currentpacking|currentpagedevice|currentshared|currentstrokeadjust|currentsystemparams|currentundercolorremoval|currentuserparams|defineresource|defineuserobject|deletefile|execform|execuserobject|filenameforall|fileposition|filter|findencoding|findresource|gcheck|globaldict|GlobalFontDirectory|glyphshow|gstate|ineofill|infill|instroke|inueofill|inufill|inustroke|ISOLatin1Encoding|languagelevel|makepattern|packedarray|printobject|product|realtime|rectclip|rectfill|rectstroke|renamefile|resourceforall|resourcestatus|revision|rootfont|scheck|selectfont|serialnumber|setbbox|setblackgeneration|setcachedevice2|setcacheparams|setcmykcolor|setcolor|setcolorrendering|setcolorscreen|setcolorspace|setcolortransfer|setdevparams|setfileposition|setglobal|setgstate|sethalftone|setobjectformat|setoverprint|setpacking|setpagedevice|setpattern|setshared|setstrokeadjust|setsystemparams|setucacheparams|setundercolorremoval|setuserparams|setvmthreshold|shareddict|SharedFontDirectory|startjob|uappend|ucache|ucachestatus|ueofill|ufill|undef|undefinefont|undefineresource|undefineuserobject|upath|UserObjects|ustroke|ustrokepath|vmreclaim|writeobject|xshow|xyshow|yshow)>
    - name: Operator3
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(GetHalftoneName|GetPageDeviceName|GetSubstituteCRD|StartData|addglyph|beginbfchar|beginbfrange|begincidchar|begincidrange|begincmap|begincodespacerange|beginnotdefchar|beginnotdefrange|beginrearrangedfont|beginusematrix|cliprestore|clipsave|composefont|currentsmoothness|currenttrapparams|endbfchar|endbfrange|endcidchar|endcidrange|endcmap|endcodespacerange|endnotdefchar|endnotdefrange|endrearrangedfont|endusematrix|findcolorrendering|removeall|removeglyphs|setsmoothness|settrapparams|settrapzone|shfill|usecmap|usefont)>
    - name: Old operator
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(condition|currentcontext|currenthalftonephase|defineusername|detach|deviceinfo|eoviewclip|fork|initviewclip|join|lock|monitor|notify|rectviewclip|sethalftonephase|viewclip|viewclippath|wait|wtranslation|yield)>
Python:
  line_context: 2
  char_context: 0
  patterns:
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: String3s
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[uU]?[rR]?'{3}"
      end_re: "'{3}"
    - name: String3d
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[uU]?[rR]?\"{3}"
      end_re: "\"{3}"
    - name: String1s
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[uU]?[rR]?'"
      end_re: "'"
      error_re: $
    - name: String1d
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[uU]?[rR]?\""
      end_re: "\""
      error_re: $
    - name: String escape chars 3s
      style: String1
      parent_pattern: String3s
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:\n|\\|'|"|a|b|f|n|r|t|v|[0-7]{1,3}|x[\da-fA-F]{2}|u[\da-fA-F]{4}|U[\da-fA-F]{8})
    - name: String escape chars 3d
      style: String1
      parent_pattern: String3d
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:\n|\\|'|"|a|b|f|n|r|t|v|[0-7]{1,3}|x[\da-fA-F]{2}|u[\da-fA-F]{4}|U[\da-fA-F]{8})
    - name: String escape chars 1s
      style: String1
      parent_pattern: String1s
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:\n|\\|'|"|a|b|f|n|r|t|v|[0-7]{1,3}|x[\da-fA-F]{2}|u[\da-fA-F]{4}|U[\da-fA-F]{8})
    - name: String escape chars 1d
      style: String1
      parent_pattern: String1d
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:\n|\\|'|"|a|b|f|n|r|t|v|[0-7]{1,3}|x[\da-fA-F]{2}|u[\da-fA-F]{4}|U[\da-fA-F]{8})
    - name: Representation
      style: String2
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "`"
      end_re: "`"
      error_re: $
    - name: Representation cont
      style: String2
      parent_pattern: Representation
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Number
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(?:(?:(?:[1-9]\d*|(?:[1-9]\d*|0)?\.\d+|(?:[1-9]\d*|0)\.)[eE][\-+]?\d+|(?:[1-9]\d*|0)?\.\d+|(?:[1-9]\d*|0)\.)[jJ]?|(?:[1-9]\d*|0)[jJ]|(?:0|[1-9]\d*|0[oO]?[0-7]+|0[xX][\da-fA-F]+|0[bB][0-1]+)[lL]?)(?!\Y)
    - name: Multiline import
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <from>.*?\(
      end_re: \)
    - name: Multiline import comment
      style: Comment
      parent_pattern: Multiline import
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Import
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:import|from)>
      end_re: ;|$
      error_re: "#"
    - name: Import continuation
      style: Preprocessor
      parent_pattern: Import
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Member definition
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(def)\s+(?:(__(?:abs|add|and|call|cmp|coerce|complex|contains|del|delattr|delete|delitem|div|divmod|enter|eq|exit|float|floordiv|format|ge|get|getattr|getitem|gt|hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|index|init|int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|long|lshift|lt|mod|mul|ne|neg|nonzero|oct|or|pos|pow|radd|rand|rdiv|rdivmod|repr|reversed|rfloordiv|rlshift|rmod|rmul|ror|rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|str|sub|truediv|unicode|xor)__)|((__bases__|__class__|__dict__|__doc__|__func__|__metaclass__|__module__|__name__|__self__|__slots__|co_argcount|co_cellvars|co_code|co_filename|co_firstlineno|co_flags|co_lnotab|co_name|co_names|co_nlocals|co_stacksize|co_varnames|f_back|f_builtins|f_code|f_exc_traceback|f_exc_type|f_exc_value|f_globals|f_lasti|f_restricted|f_trace|func_closure|func_code|func_defaults|func_dict|func_doc|func_globals|func_name|im_class|im_func|im_self|tb_frame|tb_lasti|tb_next)|(__(?:delslice|getslice|setslice)__)|(__(?:members|methods)__))|(and|as|assert|break|continue|def|del|elif|else|except|exec|finally|for|from|if|import|in|is|not|or|pass|print|raise|return|try|while|with|yield|class|global|lambda)|([\l_]\w*))(?=(?:\s*(?:\\\n\s*)?\(\s*|\s*\(\s*(?:\\?\n\s*)?)self>)
    - name: Member def color
      style: Keyword
      parent_pattern: Member definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: Member def special
      style: Subroutine
      parent_pattern: Member definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
    - name: Member def deprecated
      style: Warning
      parent_pattern: Member definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3
    - name: Member def error
      style: Flag
      parent_pattern: Member definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \7
    - name: Static method definition
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(def)\s+(__(?:new)__)
    - name: Static def color
      style: Keyword
      parent_pattern: Static method definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: Static def special
      style: Subroutine
      parent_pattern: Static method definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
    - name: Function definition
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(def)\s+(?:(ArithmeticError|AssertionError|AttributeError|BaseException|BufferError|BytesWarning|DeprecationWarning|EOFError|Ellipsis|EnvironmentError|Exception|False|FloatingPointError|FutureWarning|GeneratorExit|IOError|ImportError|ImportWarning|IndentationError|IndexError|KeyError|KeyboardInterrupt|LookupError|MemoryError|NameError|None|NotImplemented|NotImplementedError|OSError|OverflowError|PendingDeprecationWarning|ReferenceError|RuntimeError|RuntimeWarning|StandardError|StopIteration|SyntaxError|SyntaxWarning|SystemError|SystemExit|TabError|True|TypeError|UnboundLocalError|UnicodeDecodeError|UnicodeEncodeError|UnicodeError|UnicodeTranslateError|UnicodeWarning|UserWarning|ValueError|Warning|WindowsError|ZeroDivisionError|__builtins__|__debug__|__doc__|__import__|__name__|abs|all|any|apply|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|copyright|credits|delattr|dict|dir|divmod|enumerate|eval|execfile|exit|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|license|list|locals|long|map|max|min|object|oct|open|ord|pow|property|quit|range|raw_input|reduce|reload|repr|reversed|round|self|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)|(and|as|assert|break|continue|def|del|elif|else|except|exec|finally|for|from|if|import|in|is|not|or|pass|print|raise|return|try|while|with|yield|class|global|lambda)|([\l_]\w*))>
    - name: Function def color
      style: Keyword
      parent_pattern: Function definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: Function def deprecated
      style: Warning
      parent_pattern: Function definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
    - name: Function def error
      style: Flag
      parent_pattern: Function definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3
    - name: Class definition
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(class)\s+(?:(ArithmeticError|AssertionError|AttributeError|BaseException|BufferError|BytesWarning|DeprecationWarning|EOFError|Ellipsis|EnvironmentError|Exception|False|FloatingPointError|FutureWarning|GeneratorExit|IOError|ImportError|ImportWarning|IndentationError|IndexError|KeyError|KeyboardInterrupt|LookupError|MemoryError|NameError|None|NotImplemented|NotImplementedError|OSError|OverflowError|PendingDeprecationWarning|ReferenceError|RuntimeError|RuntimeWarning|StandardError|StopIteration|SyntaxError|SyntaxWarning|SystemError|SystemExit|TabError|True|TypeError|UnboundLocalError|UnicodeDecodeError|UnicodeEncodeError|UnicodeError|UnicodeTranslateError|UnicodeWarning|UserWarning|ValueError|Warning|WindowsError|ZeroDivisionError|__builtins__|__debug__|__doc__|__import__|__name__|abs|all|any|apply|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|copyright|credits|delattr|dict|dir|divmod|enumerate|eval|execfile|exit|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|license|list|locals|long|map|max|min|object|oct|open|ord|pow|property|quit|range|raw_input|reduce|reload|repr|reversed|round|self|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)|(and|as|assert|break|continue|def|del|elif|else|except|exec|finally|for|from|if|import|in|is|not|or|pass|print|raise|return|try|while|with|yield|class|global|lambda)|([\l_]\w*))>
    - name: Class def color
      style: Storage Type
      parent_pattern: Class definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: Class def deprecated
      style: Warning
      parent_pattern: Class definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
    - name: Class def error
      style: Flag
      parent_pattern: Class definition
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3
    - name: Member reference
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \.\s*(?:\\?\n\s*)?(?:((__(?:abs|add|and|call|cmp|coerce|complex|contains|del|delattr|delete|delitem|div|divmod|enter|eq|exit|float|floordiv|format|ge|get|getattr|getitem|gt|hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|index|init|int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|long|lshift|lt|mod|mul|ne|neg|nonzero|oct|or|pos|pow|radd|rand|rdiv|rdivmod|repr|reversed|rfloordiv|rlshift|rmod|rmul|ror|rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|str|sub|truediv|unicode|xor)__)|(__(?:new)__))|((__(?:delslice|getslice|setslice)__)|(__(?:members|methods)__))|(__bases__|__class__|__dict__|__doc__|__func__|__metaclass__|__module__|__name__|__self__|__slots__|co_argcount|co_cellvars|co_code|co_filename|co_firstlineno|co_flags|co_lnotab|co_name|co_names|co_nlocals|co_stacksize|co_varnames|f_back|f_builtins|f_code|f_exc_traceback|f_exc_type|f_exc_value|f_globals|f_lasti|f_restricted|f_trace|func_closure|func_code|func_defaults|func_dict|func_doc|func_globals|func_name|im_class|im_func|im_self|tb_frame|tb_lasti|tb_next)|(and|as|assert|break|continue|def|del|elif|else|except|exec|finally|for|from|if|import|in|is|not|or|pass|print|raise|return|try|while|with|yield|class|global|lambda)|([\l_]\w*))>
    - name: Member special method
      style: Subroutine
      parent_pattern: Member reference
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: Member deprecated
      style: Warning
      parent_pattern: Member reference
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \4
    - name: Member special attrib
      style: Identifier1
      parent_pattern: Member reference
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \7
    - name: Member ref error
      style: Flag
      parent_pattern: Member reference
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \8
    - name: Storage keyword
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:class|global|lambda)>
    - name: Keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:and|as|assert|break|continue|def|del|elif|else|except|exec|finally|for|from|if|import|in|is|not|or|pass|print|raise|return|try|while|with|yield)>
    - name: Built-in function
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:__import__|abs|all|any|basestring|bin|bool|bytearray|bytes|callable|chr|classmethod|cmp|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|exit|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|isinstance|issubclass|iter|len|list|locals|long|map|max|min|object|oct|open|ord|pow|property|quit|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)>
    - name: Built-in name
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:Ellipsis|False|None|NotImplemented|True|__builtins__|__debug__|__doc__|__name__|copyright|credits|license|self)>
    - name: Built-in exceptions
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:ArithmeticError|AssertionError|AttributeError|BaseException|BufferError|EOFError|EnvironmentError|Exception|FloatingPointError|GeneratorExit|IOError|ImportError|IndentationError|IndexError|KeyError|KeyboardInterrupt|LookupError|MemoryError|NameError|NotImplementedError|OSError|OverflowError|ReferenceError|RuntimeError|StandardError|StopIteration|SyntaxError|SystemError|SystemExit|TabError|TypeError|UnboundLocalError|UnicodeDecodeError|UnicodeEncodeError|UnicodeError|UnicodeTranslateError|ValueError|WindowsError|ZeroDivisionError)>
    - name: Built-in warnings
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:BytesWarning|DeprecationWarning|FutureWarning|ImportWarning|PendingDeprecationWarning|RuntimeWarning|SyntaxWarning|UnicodeWarning|UserWarning|Warning)>
    - name: Deprecated function
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?:apply|buffer|coerce|intern)>
    - name: Braces and parens
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[[{()}\\]]"
    - name: Decorator
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (@)
      end_re: $
      error_re: "#"
    - name: Decorator continuation
      style: Preprocessor1
      parent_pattern: Decorator
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Decorator marker
      style: Storage Type
      parent_pattern: Decorator
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: Operators
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \+|-|\*|\*\*|/|//|%|\<\<|\>\>|\&|\||\^|~|\<|\>|\<=|\>=|==|!=
    - name: Delimiter
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(|\)|\[|\]|\{|\}|,|:|\.|;|=|\+=|-=|\*=|/=|//=|%=|\&=|\|=|\^=|\>\>=|\<\<=|\*\*=
    - name: Invalid
      style: Flag
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$|\?|<(?:0[bB]\w+|0[xX]\w+|(?:0|[1-9]\d*)\w+)>
Regex:
  line_context: 1
  char_context: 0
  patterns:
    - name: Comments
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#This is a comment!)\(\?#[^)]*(?:\)|$)
    - name: Literal Escape
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Special chars that need escapes)\\[abefnrtv()\[\]<>{}.|^$*+?&\\]
    - name: Shortcut Escapes
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Shortcuts for common char classes)\\[dDlLsSwW]
    - name: Backreferences
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Internal regex backreferences)\\[1-9]
    - name: Word Delimiter
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Special token to match NEdit [non]word-delimiters)\\[yY]
    - name: Numeric Escape
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Negative lookahead is to exclude \x0 and \00)(?!\\[xX0]0*(?:[^\da-fA-F]|$))\\(?:[xX]0*[1-9a-fA-F][\da-fA-F]?|0*[1-3]?[0-7]?[0-7])
    - name: Quantifiers
      style: Flag
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Matches greedy and lazy quantifiers)[*+?]\??
    - name: Counting Quantifiers
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Properly limits range numbers to 0-65535)\{(?:[0-5]?\d?\d?\d?\d|6[0-4]\d\d\d|65[0-4]\d\d|655[0-2]\d|6553[0-5])?(?:,(?:[0-5]?\d?\d?\d?\d|6[0-4]\d\d\d|65[0-4]\d\d|655[0-2]\d|6553[0-5])?)?\}\??
    - name: Character Class
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Handles escapes, char ranges, ^-] at beginning and - at end)\[\^?[-\]]?(?:(?:\\(?:[abdeflnrstvwDLSW\-()\[\]<>{}.|^$*+?&\\]|[xX0][\da-fA-F]+)|[^\\\]])(?:-(?:\\(?:[abdeflnrstvwDLSW\-()\[\]<>{}.|^$*+?&\\]|[xX0][\da-fA-F]+)|[^\\\]]))?)*\-?]
    - name: Anchors
      style: Flag
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#\B is the "not a word boundary" anchor)[$^<>]|\\B
    - name: Parens and Alternation
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \(?:\?(?:[:=!iInN])|[()|]
    - name: Match Themselves
      style: Text Comment
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?#Highlight chars left over which just match themselves).
SGML HTML:
  line_context: 6
  char_context: 0
  patterns:
    - name: markup declaration
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!
      end_re: \>
    - name: mdo-mdc
      style: Storage Type
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: markup declaration dq string
      style: String1
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
    - name: markup declaration sq string
      style: String1
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
    - name: entity declaration
      style: Preprocessor
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?ientity))[ \t\n][ \t]*\n?[ \t]*(%[ \t\n][ \t]*\n?[ \t]*)?(\l[\l\d\-\.]*|#((?idefault)))[ \t\n][ \t]*\n?[ \t]*((?i[cs]data|pi|starttag|endtag|m[ds]))?
    - name: ed name
      style: String2
      parent_pattern: element declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: ed type
      style: Storage Type
      parent_pattern: entity declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \4
      end_re: ""
    - name: doctype declaration
      style: Preprocessor
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?idoctype))[ \t\n][ \t]*\n?[ \t]*(\l[\l\d\-\.]*)
    - name: dt name
      style: String2
      parent_pattern: doctype declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: element declaration
      style: Preprocessor
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?ielement))[ \t\n][ \t]*\n?[ \t]*(\l[\l\d\-\.]*)
    - name: attribute declaration
      style: Preprocessor
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?iattlist))[ \t\n][ \t]*\n?[ \t]*(\l[\l\d\-\.]*)
    - name: ad name
      style: String2
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: notation declaration
      style: Preprocessor
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?inotation))[ \t\n][ \t]*\n?[ \t]*(\l[\l\d\-\.]*)
    - name: nd name
      style: String2
      parent_pattern: notation declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: shortref declaration
      style: Preprocessor
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?ishortref))[ \t\n][ \t]*\n?[ \t]*(\l[\l\d\-\.]*)
    - name: sd name
      style: String2
      parent_pattern: shortref declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: comment
      style: Comment
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \-\-
      end_re: \-\-
    - name: pi
      style: Flag
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<\?[^\>]*\??\>
    - name: stag
      style: Text Key1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<)(\(\l[\w\-\.:]*\))?\l[\w\-\.:]*
      end_re: /?\>
    - name: stago-tagc
      style: Text Arg
      parent_pattern: stag
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: "&"
    - name: Attribute
      style: Plain
      parent_pattern: stag
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ([\l\-]+)[ \t\v]*\n?[ \t\v]*=[ \t\v]*\n?[ \t\v]*("([^"]*\n){,4}[^"]*"|'([^']*\n){,4}[^']*'|\&([^;]*\n){,4}[^;]*;|[\w\-\.:]+)
    - name: Attribute name
      style: Text Arg2
      parent_pattern: Attribute
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Attribute value
      style: String
      parent_pattern: Attribute
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: Boolean Attribute
      style: Text Arg1
      parent_pattern: stag
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ([\l\-]+)
    - name: etag
      style: Text Key1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\</)(\(\l[\w\-\.:]*\))?(\l[\w\-\.:]*[ \t\v]*\n?[ \t\v]*)?(\>)
    - name: etago-tagc
      style: Text Arg
      parent_pattern: etag
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1\4
      end_re: ""
    - name: Character reference
      style: Text Escape
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \&((\(\l[\l\d\-\.]*\))?\l[\l\d]*|#\d+|#[xX][a-fA-F\d]+);?
    - name: parameter entity
      style: Text Escape
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%(\\(\\l[\\l\\d\\-\\.]*\\))?\\l[\\l\\d\\-\\.]*;?"
    - name: md parameter entity
      style: Text Escape
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%(\\(\\l[\\l\\d\\-\\.]*\\))?\\l[\\l\\d\\-\\.]*;?"
    - name: system-public id
      style: Storage Type
      parent_pattern: markup declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?isystem|public|cdata)>
SQL:
  line_context: 1
  char_context: 0
  patterns:
    - name: keywords
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ",|%|\\<|\\>|:=|=|<(SELECT|ON|FROM|ORDER BY|DESC|WHERE|AND|OR|NOT|nullptr|TRUE|FALSE)>"
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: --
      end_re: $
    - name: data types
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(CHAR|VARCHAR2\([0-9]*\)|INT[0-9]*|POINT|BOX|TEXT|BOOLEAN|VARCHAR2|VARCHAR|NUMBER\([0-9]*\)|NUMBER)(?!\Y)
    - name: string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
    - name: keywords2
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: END IF;|(?<!\Y)(CREATE|REPLACE|BEGIN|END|FUNCTION|RETURN|FETCH|OPEN|CLOSE| IS|NOTFOUND|CURSOR|IF|ELSE|THEN|INTO|IS|IN|WHEN|OTHERS|GRANT|ON|TO|EXCEPTION|SHOW|SET|OUT|PRAGMA|AS|PACKAGE)>
    - name: comment2
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
Sh Ksh Bash:
  line_context: 1
  char_context: 0
  patterns:
    - name: README
      style: Flag
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: Shell syntax highlighting patterns, version 2.2, maintainer Thorsten Haude, nedit at thorstenhau.de
    - name: escaped special characters
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[\\"$`']
    - name: single quoted string
      style: String1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
    - name: double quoted string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
    - name: double quoted escape
      style: String2
      parent_pattern: double quoted string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[\\"$`]
    - name: dq command sub
      style: Subroutine
      parent_pattern: double quoted string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "`"
      end_re: "`"
      error_re: "\""
    - name: dq arithmetic expansion
      style: String
      parent_pattern: double quoted string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\(\(
      end_re: \)\)
      error_re: "\""
    - name: dq new command sub
      style: Subroutine
      parent_pattern: double quoted string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\(
      end_re: \)
      error_re: "\""
    - name: dqncs single quoted string
      style: String1
      parent_pattern: dq new command sub
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
    - name: dq variables
      style: Identifier1
      parent_pattern: double quoted string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-*@#?$!0-9]|[a-zA-Z_][0-9a-zA-Z_]*)
    - name: dq variables2
      style: Identifier1
      parent_pattern: double quoted string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\{
      end_re: "}"
      error_re: \n
    - name: arithmetic expansion
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\(\(
      end_re: \)\)
    - name: ae escapes
      style: String2
      parent_pattern: arithmetic expansion
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[\\$`"']
    - name: ae single quoted string
      style: String1
      parent_pattern: arithmetic expansion
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \)\)
    - name: ae command sub
      style: Subroutine
      parent_pattern: arithmetic expansion
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "`"
      end_re: "`"
      error_re: \)\)
    - name: ae arithmetic expansion
      style: String
      parent_pattern: arithmetic expansion
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\(\(
      end_re: \)\)
    - name: ae new command sub
      style: Subroutine
      parent_pattern: arithmetic expansion
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\(
      end_re: \)
      error_re: \)\)
    - name: ae variables
      style: Identifier1
      parent_pattern: arithmetic expansion
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-*@#?$!0-9]|[a-zA-Z_][0-9a-zA-Z_]*)
    - name: ae variables2
      style: Identifier1
      parent_pattern: arithmetic expansion
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\{
      end_re: "}"
      error_re: \)\)
    - name: comments
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^[ \t]*#
      end_re: $
    - name: command substitution
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "`"
      end_re: "`"
    - name: cs escapes
      style: Subroutine1
      parent_pattern: command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[\\$`"']
    - name: cs single quoted string
      style: String1
      parent_pattern: command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: "`"
    - name: cs variables
      style: Identifier1
      parent_pattern: command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-*@#?$!0-9]|[a-zA-Z_][0-9a-zA-Z_]*)
    - name: cs variables2
      style: Identifier1
      parent_pattern: command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\{
      end_re: "}"
      error_re: "`"
    - name: new command substitution
      style: Subroutine
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\(
      end_re: \)
    - name: ncs new command substitution
      style: Subroutine
      parent_pattern: new command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\(
      end_re: \)
    - name: ncs escapes
      style: Subroutine1
      parent_pattern: new command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\[\\$`"']
    - name: ncs single quoted string
      style: String1
      parent_pattern: new command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
    - name: ncs variables
      style: Identifier1
      parent_pattern: new command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-*@#?$!0-9]|[a-zA-Z_][0-9a-zA-Z_]*)
    - name: ncs variables2
      style: Identifier1
      parent_pattern: new command substitution
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\{
      end_re: "}"
      error_re: \)
    - name: assignment
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[a-zA-Z_][0-9a-zA-Z_]*="
    - name: variables
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$([-*@#?$!0-9_]|[a-zA-Z_][0-9a-zA-Z_]*)
    - name: variables2
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\{
      end_re: "}"
    - name: internal var
      style: Identifier1
      parent_pattern: variables2
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\{
      end_re: "}"
    - name: comments in line
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: numbers
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?i0x[\da-f]+)|((\d*\.)?\d+([eE][-+]?\d+)?(?iul?|l|f)?)>
    - name: keywords
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(if|fi|then|else|elif|case|esac|while|for|do|done|in|select|time|until|function|\[\[|\]\])(?!\Y)[\s\n]
    - name: command options
      style: Identifier
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<=\s)-[^ \t{}[\],()'"~!@#$%^&*|\\<>?]+
    - name: delimiters
      style: Text Key
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{};<>&~=!|^%[\\]+*|]"
    - name: built ins
      style: Subroutine1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(:|\.|source|alias|bg|bind|break|builtin|cd|chdir|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|jobs|kill|let|local|logout|popd|print|printf|pushd|pwd|read|readonly|return|set|shift|shopt|stop|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|wait|whence)(?!\Y)[\s\n;]
Tcl:
  line_context: 1
  char_context: 0
  patterns:
    - name: Double Quote String
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
    - name: Single Quote String
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: "[^\\\\][^']"
    - name: Ignore Escaped Chars
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: Variable Ref
      style: Identifier1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\w+|\$\{[^}]*}|\$|#auto
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#"
      end_re: $
    - name: Keywords
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(after\s+(\d+|cancel|idle|info)?|append|array\s+(anymore|donesearch|exists|get|names|nextelement|set|size|startsearch|unset)|bell|bgerror|binary\s+(format|scan)|bind(tags)?|body|break|case|catch|cd|class|clipboard\s+(clear|append)|clock\s+(clicks|format|scan|seconds)|close|code|common|concat|configbody|constructor|continue|delete\s+(class|object|namespace)|destroy|destructor|else|elseif|encoding\s+(convertfrom|convertto|names|system)|ensemble|eof|error|eval|event\s+(add|delete|generate|info)|exec|exit|expr|fblocked|fconfigure|fcopy|file\s+(atime|attributes|channels|copy|delete|dirname|executable|exists|extension|isdirectory|isfile|join|lstat|mkdir|mtime|nativename|owned|pathtype|readable|readlink|rename|rootname|size|split|stat|tail|type|volume|writable)|fileevent|find\s+(classes|objects)|flush|focus|font\s+(actual|configure|create|delete|families|measure|metrics|names)|foreach|format|gets|glob(al)?|grab\s+(current|release|set|status|(-global\s+)?\w+)|grid(\s+bbox|(column|row)?configure|forget|info|location|propagate|remove|size|slaves)?|history\s+(add|change|clear|event|info|keep|nextid|redo)|if|image\s+(create|delete|height|names|type|width)|incr|info\s+(args|body|cmdcount|commands|complete|default|exists|globals|hostname|level|library|loaded|locals|nameofexecutable|patchlevel|procs|script|sharedlibextension|tclversion|vars)|inherit|interp\s+(alias(es)?|create|delete|eval|exists|expose|hide|hidden|invokehidden|issafe|marktrusted|share|slaves|target|transfer)|join|lappend|lindex|linsert|list|llength|load|local|lrange|lreplace|lsearch|lsort|method|memory\s+(info|(trace|validate)\s+(on|off)|trace_on_at_malloc|break_on_malloc|display)|namespace\s+(children|code|current|delete|eval|export|forget|import|inscope|origin|parent|qualifiers|tail|which)|open|option\s+(add|clear|get|read(file))|pack\s+(configure|forget|info|propagate|slaves)?|package\s+(forget|ifneeded|names|present|provide|require|unknown|vcompare|versions|vsatisfies)|pid|place\s+(configure|forget|info|slaves)?|proc|puts|pwd|raise|read|regexp|regsub|rename|resource\s+(close|delete|files|list|open|read|types|write)|return|scan|scope(dobject)?|seek|selection\s+(clear|get|handle|own)|send|set|socket|source|split|string\s+(bytelength|compare|equal|first|index|is|last|length|map|match|range|repeat|replace|tolower|totitle|toupper|trim|trimleft|trimright|wordend|wordstart)|subst|switch|tell|time|tk\s+(appname|scaling|useinputmethods)|tk_(bindForTraversal|bisque|chooseColor|chooseDirectory|dialog|focusFollowsMouse|focusNext|focusPrev|getOpenFile|getSaveFile|menuBar|messageBox|optionMenu|popup|setPalette)|tkerror|tkwait\s+(variable|visibility|window)|trace\s+(variable|vdelete|vinfo)|unknown|unset|update|uplevel|upvar|usual|variable|while|winfo\s+(atom|atomname|cells|children|class|colormapfull|containing|depth|exists|fpixels|geometry|height|id|interp|ismapped|manager|name|parent|pathname|pixels|pointerx|pointerxy|pointery|reqheight|reqwidth|rgb|rootx|rooty|screen(cells|depth|height|mmheigth|mmidth|visual|width)?|server|toplevel|viewable|visual(id|savailable)?|vroot(height|width|x|y)|width|x|y)|wm\s+(aspect|client|colormapwindows|command|deiconify|focusmodel|frame|geometry|grid|group|iconbitmap|icon(ify|mask|name|position|window)|(max|min)size|overrideredirect|positionfrom|protocol|resizable|sizefrom|state|title|transient|withdraw))(?!\Y)
    - name: Widgets
      style: Identifier
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(button(box){0,1}|calendar|canvas(printbox|printdialog){0,1}|check(box|button)|combobox|date(entry|field)|dialog(shell){0,1}|entry(field){0,1}|(ext){0,1}fileselection(box|dialog)|feedback|finddialog|frame|hierarchy|hyperhelp|label(edframe|edwidget){0,1}|listbox|mainwindow|menu(bar|button){0,1}|message(box|dialog){0,1}|notebook|optionmenu|panedwindow|promptdialog|pushbutton|radio(box|button)|scale|scrollbar|scrolled(canvas|frame|html|listbox|text)|selection(box|dialog)|shell|spin(date|int|ner|time)|tab(notebook|set)|text|time(entry|field)|toolbar|toplevel|watch)>
    - name: Braces and Brackets
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\[\\]{}]"
    - name: DQ String Esc Chars
      style: String1
      parent_pattern: Double Quote String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: SQ String Esc Chars
      style: String1
      parent_pattern: Single Quote String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: Variable in String
      style: Identifier1
      parent_pattern: Double Quote String
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$\w+|\$\{[^}]*}|\$
    - name: Storage
      style: Storage Type
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(public|private|protected)>
    - name: Namespace
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\\w+::"
VHDL:
  line_context: 1
  char_context: 0
  patterns:
    - name: Comments
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: --
      end_re: $
    - name: String Literals
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: Vhdl Attributes
      style: Ada Attributes
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'[a-zA-Z][a-zA-Z_]+"
    - name: Character Literals
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: "[^\\\\][^']"
    - name: Numeric Literals
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(((2#|8#|10#|16#)[_0-9a-fA-F]*#)|[0-9.]+)(?!\Y)
    - name: Predefined Types
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?ialias|constant|signal|variable|subtype|type|resolved|boolean|string|integer|natural|time)>
    - name: Predefined SubTypes
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?istd_logic|std_logic_vector|std_ulogic|std_ulogic_vector|bit|bit_vector)>
    - name: Reserved Words
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?iabs|access|after|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|disconnect|downto|else|elsif|end|entity|error|exit|failure|file|for|function|generate|generic|guarded|if|in|inout|is|label|library|linkage|loop|map|mod|nand|new|next|nor|not|note|null|of|on|open|or|others|out|package|port|procedure|process|range|record|register|rem|report|return|select|severity|then|to|transport|units|until|use|wait|warning|when|while|with|xor|group|impure|inertial|literal|postponed|pure|reject|rol|ror|shared|sla|sll|sra|srl|unaffected|xnor)>
    - name: Identifiers
      style: Plain
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <([a-zA-Z][a-zA-Z0-9_]*)>
    - name: Flag Special Comments
      style: Flag
      parent_pattern: Comments
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: --\<[^a-zA-Z0-9]+\>
    - name: Instantiation
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ([a-zA-Z][a-zA-Z0-9_]*)([ \t]+):([ \t]+)([a-zA-Z][a-zA-Z0-9_]*)([ \t]+)(port|generic|map)
    - name: Instance Name
      style: Identifier1
      parent_pattern: Instantiation
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Component Name
      style: Identifier
      parent_pattern: Instantiation
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \4
      end_re: ""
    - name: Syntax Character
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<=|=\>|:|=|:=|;|,|\(|\))
Verilog:
  line_context: 1
  char_context: 0
  patterns:
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: cplus comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: //
      end_re: $
    - name: String Literals
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n
    - name: preprocessor line
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^[ ]*`
      end_re: $
    - name: Reserved WordsA
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(module|endmodule|parameter|specify|endspecify|begin|end|initial|always|if|else|task|endtask|force|release|attribute|case|case[xz]|default|endattribute|endcase|endfunction|endprimitive|endtable|for|forever|function|primitive|table|while|;)(?!\Y)
    - name: Predefined Types
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(and|assign|buf|bufif[01]|cmos|deassign|defparam|disable|edge|event|force|fork|highz[01]|initial|inout|input|integer|join|large|macromodule|medium|nand|negedge|nmos|nor|not|notif[01]|or|output|parameter|pmos|posedge|pullup|rcmos|real|realtime|reg|release|repeat|rnmos|rpmos|rtran|rtranif[01]|scalered|signed|small|specparam|strength|strong[01]|supply[01]|time|tran|tranif[01]|tri[01]?|triand|trior|trireg|unsigned|vectored|wait|wand|weak[01]|wire|wor|xnor|xor)>
    - name: System Functions
      style: Subroutine
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \$[a-z_]+
    - name: Numeric Literals
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)([0-9]*'[dD][0-9xz\\?_]+|[0-9]*'[hH][0-9a-fxz\\?_]+|[0-9]*'[oO][0-7xz\\?_]+|[0-9]*'[bB][01xz\\?_]+|[0-9.]+((e|E)(\\+|-)?)?[0-9]*|[0-9]+)(?!\Y)
    - name: Delay Word
      style: Ada Attributes
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((#\(.*\))|(#[0-9]*))(?!\Y)
    - name: Simple Word
      style: Plain
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ([a-zA-Z][a-zA-Z0-9]*)
    - name: Instance Declaration
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ([a-zA-Z][a-zA-Z0-9_]*)([ \t]+)([a-zA-Z][a-zA-Z0-9_$]*)([ \t]*)\(
    - name: Module name
      style: Identifier
      parent_pattern: Instance Declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: Instance Name
      style: Identifier1
      parent_pattern: Instance Declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3
      end_re: ""
    - name: Pins Declaration
      style: Storage Type1
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(\.([a-zA-Z0-9_]+))>
    - name: Special Chars
      style: Keyword
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\{|\}|,|;|=|\.)
XML:
  line_context: 1
  char_context: 0
  patterns:
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!--
      end_re: --\>
    - name: ignored section
      style: Text Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!\[\s*IGNORE\s*\[
      end_re: \]\]\>
    - name: declaration
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<\?(?ixml)
      end_re: \?\>
    - name: declaration delims
      style: Keyword
      parent_pattern: declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: declaration attributes
      style: Keyword
      parent_pattern: declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ((?iversion|encoding|standalone))=
    - name: declaration attribute names
      style: Preprocessor
      parent_pattern: declaration attributes
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: declaration sq string
      style: String1
      parent_pattern: declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n\n
    - name: declaration sq string entity
      style: Text Escape
      parent_pattern: declaration sq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: declaration dq string
      style: String
      parent_pattern: declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n\n
    - name: declaration dq string entity
      style: Text Escape
      parent_pattern: declaration dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: doctype
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\<!(?idoctype))\s+(\<?(?!(?ixml))[\l_][\w:-]*\>?)
      end_re: \>
      error_re: \[
    - name: doctype delims
      style: Keyword
      parent_pattern: doctype
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: "&"
    - name: doctype root element
      style: Identifier
      parent_pattern: doctype
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
    - name: doctype keyword
      style: Keyword
      parent_pattern: doctype
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (SYSTEM|PUBLIC)
    - name: doctype sq string
      style: String1
      parent_pattern: doctype
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n\n
    - name: doctype dq string
      style: String
      parent_pattern: doctype
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n\n
    - name: processing instruction
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<\?\S+
      end_re: \?\>
    - name: processing instruction attribute
      style: Preprocessor
      parent_pattern: processing instruction
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\l_][\\w:-]*=((\"[^\"]*\")|('[^']*'))"
    - name: processing instruction value
      style: String
      parent_pattern: processing instruction attribute
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: cdata
      style: Text Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!\[(?icdata)\[
      end_re: \]\]\>
    - name: cdata delims
      style: Preprocessor
      parent_pattern: cdata
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: element declaration
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!ELEMENT
      end_re: \>
    - name: element declaration delims
      style: Keyword
      parent_pattern: element declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: element declaration entity ref
      style: Identifier1
      parent_pattern: element declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%(?!(?ixml))[\\l_][\\w:-]*;"
    - name: element declaration keyword
      style: Storage Type
      parent_pattern: element declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(ANY|#PCDATA|EMPTY)>
    - name: element declaration name
      style: Identifier
      parent_pattern: element declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?!(?ixml))[\l_][\w:-]*
    - name: element declaration operator
      style: Keyword
      parent_pattern: element declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[(),?*+|]"
    - name: entity declaration
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!ENTITY
      end_re: \>
    - name: entity declaration delims
      style: Keyword
      parent_pattern: entity declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: entity declaration sq string
      style: String1
      parent_pattern: entity declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n\n
    - name: entity declaration sq string entity
      style: Text Escape
      parent_pattern: entity declaration sq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: entity declaration dq string
      style: String
      parent_pattern: entity declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n\n
    - name: entity declaration dq string entity
      style: Text Escape
      parent_pattern: entity declaration dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: entity declaration keyword
      style: Keyword
      parent_pattern: entity declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: SYSTEM|NDATA
    - name: entity declaration name
      style: Identifier
      parent_pattern: entity declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?!(?ixml))[\l_][\w:-]*
    - name: parameter entity declaration
      style: Keyword
      parent_pattern: entity declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "%\\s+((?!(?ixml))[\\l_][\\w:-]*)>"
    - name: parameter entity name
      style: Identifier
      parent_pattern: parameter entity declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: notation
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!NOTATION
      end_re: \>
    - name: notation delims
      style: Keyword
      parent_pattern: notation
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: notation sq string
      style: String1
      parent_pattern: notation
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n\n
    - name: notation sq string entity
      style: Text Escape
      parent_pattern: notation sq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: notation dq string
      style: String
      parent_pattern: notation
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n\n
    - name: notation dq string entity
      style: Text Escape
      parent_pattern: notation dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: notation keyword
      style: Keyword
      parent_pattern: notation
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: SYSTEM
    - name: notation name
      style: Identifier
      parent_pattern: notation
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?!(?ixml))[\l_][\w:-]*
    - name: attribute declaration
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!ATTLIST
      end_re: \>
    - name: attribute declaration delims
      style: Keyword
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: "&"
    - name: attribute declaration sq string
      style: String1
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n\n
    - name: attribute declaration sq string entity
      style: Text Escape
      parent_pattern: attribute declaration sq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: attribute declaration dq string
      style: String
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n\n
    - name: attribute declaration dq string entity
      style: Text Escape
      parent_pattern: attribute declaration dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: attribute declaration namespace
      style: Preprocessor
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?ixmlns)(:[\l_][\w:]*)?
    - name: attribute declaration default modifier
      style: Keyword
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "#(REQUIRED|IMPLIED|FIXED)>"
    - name: attribute declaration data type
      style: Storage Type
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(CDATA|ENTIT(Y|IES)|ID(REFS?)?|NMTOKENS?|NOTATION)>
    - name: attribute declaration name
      style: Identifier
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(?!(?ixml))[\l_][\w:-]*
    - name: attribute declaration operator
      style: Keyword
      parent_pattern: attribute declaration
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[(),?*+|]"
    - name: element
      style: Warning
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (\</?)((?!(?ixml))[\l_][\w:-]*)
      end_re: /?\>
    - name: element delims
      style: Keyword
      parent_pattern: element
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: "&"
    - name: element name
      style: Identifier
      parent_pattern: element
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
    - name: element assign
      style: Keyword
      parent_pattern: element
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: =
    - name: element reserved attribute
      style: Text Key
      parent_pattern: element
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?ixml:(lang|space|link|attribute))(?==)
    - name: element namespace
      style: Preprocessor
      parent_pattern: element
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?ixmlns:[\l_]\w*)(?==)
    - name: element attribute
      style: Text Key1
      parent_pattern: element
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\l_][\\w:-]*(?==)"
    - name: element sq string
      style: String1
      parent_pattern: element
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: \n\n
    - name: element sq string entity
      style: Text Escape
      parent_pattern: element sq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: element dq string
      style: String
      parent_pattern: element
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "\""
      end_re: "\""
      error_re: \n\n
    - name: element dq string entity
      style: Text Escape
      parent_pattern: element dq string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: entity
      style: Text Escape
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "&((amp|lt|gt|quot|apos)|#x[\\da-fA-F]*|[\\l_]\\w*);"
    - name: marked section
      style: Label
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \<!\[\s*(?:INCLUDE|(%(?!(?ixml))[\l_][\w:-]*;))\s*\[|\]\]\>
    - name: marked section entity ref
      style: Identifier
      parent_pattern: marked section
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
    - name: internal subset delims
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[\\[\\]>]"
    - name: info
      style: Comment
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "(?# version 0.1; author/maintainer: Joor Loohuis, joor@loohuis-consulting.nl)"
X Resources:
  line_context: 2
  char_context: 0
  patterns:
    - name: Preprocessor
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^\s*#
      end_re: $
    - name: Preprocessor Wrap
      style: Preprocessor1
      parent_pattern: Preprocessor
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^\s*!
      end_re: $
    - name: Comment Wrap
      style: Comment
      parent_pattern: Comment
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: Resource Continued
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^(\s*[^:\s]+\s*:)(?:(\\.)|.)*(\\)\n
      end_re: $
    - name: RC Space Warning
      style: Flag
      parent_pattern: Resource Continued
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\s+$
    - name: RC Esc Chars
      style: Text Arg2
      parent_pattern: Resource Continued
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\.
    - name: RC Esc Chars 2
      style: Text Arg2
      parent_pattern: Resource Continued
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
      end_re: ""
    - name: RC Name
      style: Identifier
      parent_pattern: Resource Continued
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \1
      end_re: ""
    - name: RC Wrap
      style: Text Arg1
      parent_pattern: Resource Continued
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\\n
    - name: RC Wrap2
      style: Text Arg1
      parent_pattern: Resource Continued
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \3
      end_re: ""
    - name: Resource
      style: Plain
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "^\\s*[^:\\s]+\\s*:"
      end_re: $
    - name: Resource Space Warning
      style: Flag
      parent_pattern: Resource
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \S+\s+$
    - name: Resource Esc Chars
      style: Text Arg2
      parent_pattern: Resource
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\.
    - name: Resource Name
      style: Identifier
      parent_pattern: Resource
      defer_parsing: false
      color_only: true
      parse_subpatterns_from_start: false
      start_re: "&"
      end_re: ""
    - name: Free Text
      style: Flag
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^.*$
Yacc:
  line_context: 1
  char_context: 0
  patterns:
    - name: comment
      style: Comment
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: string
      style: String
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: preprocessor line
      style: Preprocessor
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: ^\s*#\s*(include|define|if|ifn?def|line|error|else|endif|elif|undef|pragma)>
      end_re: $
    - name: string escape chars
      style: String1
      parent_pattern: string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: preprocessor esc chars
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(.|\n)
    - name: preprocessor comment
      style: Comment
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: /\*
      end_re: \*/
    - name: preprocessor string
      style: Preprocessor1
      parent_pattern: preprocessor line
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: L?"
      end_re: "\""
      error_re: \n
    - name: prepr string esc chars
      style: String1
      parent_pattern: preprocessor string
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: \\(?:.|\n)
    - name: character constant
      style: Character Const
      parent_pattern: ""
      defer_parsing: false
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "'"
      end_re: "'"
      error_re: "[^\\\\][^']"
    - name: numeric constant
      style: Numeric Const
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?(?!\Y)
    - name: storage keyword
      style: Storage Type
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(const|extern|auto|register|static|unsigned|signed|volatile|char|double|float|int|long|short|void|typedef|struct|union|enum)>
    - name: rule
      style: Preprocessor1
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "^[ \\t]*[A-Za-z_][A-Za-z0-9_]*[ \\t]*:"
    - name: keyword
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(return|goto|if|else|case|default|switch|break|continue|while|do|for|sizeof)>
    - name: yacc keyword
      style: Text Arg
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: <(error|YYABORT|YYACCEPT|YYBACKUP|YYERROR|YYINITDEPTH|YYLTYPE|YYMAXDEPTH|YYRECOVERING|YYSTYPE|yychar|yyclearin|yydebug|yyerrok|yyerror|yylex|yylval|yylloc|yynerrs|yyparse)>
    - name: percent keyword
      style: Text Arg
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(%left|%nonassoc|%prec|%right|%start|%token|%type|%union)>([ \t]*\<.*\>)?
    - name: braces
      style: Keyword
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: "[{}]"
    - name: markers
      style: Flag
      parent_pattern: ""
      defer_parsing: true
      color_only: false
      parse_subpatterns_from_start: false
      start_re: (?<!\Y)(%\{|%\}|%%)(?!\Y)
    - name: percent sub-expr
      style: Text Arg2
      parent_pattern: percent keyword
      defer_parsing: true
      color_only: true
      parse_subpatterns_from_start: false
      start_re: \2
